{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0602f736763f38c1c693","webpack:///./node_modules/belter/src/decorators.js","webpack:///./node_modules/belter/src/device.js","webpack:///./node_modules/belter/src/dom.js","webpack:///./node_modules/belter/src/experiment.js","webpack:///./node_modules/belter/src/global.js","webpack:///./node_modules/belter/src/http.js","webpack:///./node_modules/belter/src/index.js","webpack:///./node_modules/belter/src/storage.js","webpack:///./node_modules/belter/src/util.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/util.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/native.js","webpack:///./node_modules/cross-domain-utils/src/index.js","webpack:///./node_modules/cross-domain-utils/src/util.js","webpack:///./node_modules/cross-domain-utils/src/utils.js","webpack:///./node_modules/zalgo-promise/src/utils.js","webpack:///./node_modules/zalgo-promise/src/global.js","webpack:///./node_modules/zalgo-promise/src/promise.js","webpack:///./node_modules/zalgo-promise/src/exceptions.js","webpack:///./node_modules/zalgo-promise/src/index.js","webpack:///./src/conf/constants.js","webpack:///./src/conf/config.js","webpack:///./src/global.js","webpack:///./src/lib/serialize.js","webpack:///./src/lib/ready.js","webpack:///./src/drivers/send/strategies.js","webpack:///./src/drivers/send/index.js","webpack:///./src/lib/util.js","webpack:///./src/drivers/listeners.js","webpack:///./src/drivers/receive/types.js","webpack:///./src/drivers/receive/index.js","webpack:///./src/public/client.js","webpack:///./src/public/server.js","webpack:///./src/public/config.js","webpack:///./src/public/index.js","webpack:///./src/clean.js","webpack:///./src/interface.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","window","navigator","mockUserAgent","userAgent","match","isLocalStorageEnabled","inlineMemoize","localStorage","value","Math","random","toString","setItem","result","getItem","removeItem","err","obj","event","handler","addEventListener","cancel","removeEventListener","create","Error","__WEBPACK_IMPORTED_MODULE_1__dom__","__WEBPACK_IMPORTED_MODULE_5__util__","__WEBPACK_IMPORTED_MODULE_7__types__","getStorage","_ref","_ref$version","version","undefined","_ref$lifetime","lifetime","STORAGE_KEY","accessedStorage","getState","localStorageEnabled","storage","rawStorage","JSON","parse","getGlobal","id","uniqueID","stringify","getSession","session","__session__","now","Date","created","guid","getID","getSessionState","state","getSessionID","__WEBPACK_IMPORTED_MODULE_0__util__","global","__GLOBAL__","method","_this","options","arguments","length","cacheMap","WeakMap","memoizedFunction","_len","args","Array","_key","cache","getOrSet","thisNamespace","key","serializeArgs","cacheTime","time","__calling__","apply","reset","displayName","promisifiedFunction","ZalgoPromise","logic","__inline_memoize_cache__","called","stringifyError","level","stack","message","indexOf","newErr","item","source","assign","timeout","loop","setTimeout","clearTimeout","string","charAt","toUpperCase","slice","toLowerCase","replaceObject","replacer","fullKey","isArray","_loop","defineLazyProp","itemKey","el","child","isPlainObject","_loop2","_this3","_arguments2","str","chars","replace","floor","toISOString","btoa","objectIDs","subkey","val","_typeof","uid","set","getObjectID","TypeError","isObjectObject","constructor","safeIndexOf","collection","counter","CrossDomainSafeWeakMap","_classCallCheck","freeze","testWeakMap","testKey","hasNativeWeakMap","weakmap","keys","values","_cleanupClosedWindows","isWindow","isWindowClosed","splice","isSafeToReadWrite","entry","writable","index","push","has","__WEBPACK_IMPORTED_MODULE_0__utils__","__WEBPACK_IMPORTED_MODULE_1__types__","isRegex","frame","iframeFrames","isFrameWindowClosed","iframeWindows","cleanIframes","contentWindow","win","parent","actualParent","getAncestor","top","getParent","isAncestorParent","_i7","_getAllChildFrames4","getAllChildFrames","_i3","_getFrames2","getFrames","_length2","_i5","_getAllChildFrames2","_length4","childFrame","_length6","getTop","_i16","_getFrames8","_length14","Boolean","getOpener","matchDomain","pattern","origin","CONSTANTS","WILDCARD","some","subpattern","join","IE_WIN_ACCESS_ERROR","Window","__cross_domain_utils_window_check__","MOCK_PROTOCOL","FILE_PROTOCOL","ABOUT_PROTOCOL","isAboutProtocol","location","protocol","opener","canReadFromWindow","href","getActualDomain","host","getDomain","domain","mockDomain","isActuallySameDomain","desc","getOwnPropertyDescriptor","childParent","getParents","frames","len","parentNode","doc","ownerDocument","documentElement","contains","allowMock","closed","isSameDomain","mockclosed","iframeIndex","isPromise","Promise","then","glob","zalgoGlobal","__zalgopromise__","flushPromises","activeCount","possiblyUnhandledPromiseHandlers","dispatchedErrors","resolved","rejected","errorHandled","handlers","error","isAsync","res","resolve","reject","dispatch","_this2","promise","j","dispatchPossiblyUnhandledError","asyncReject","dispatching","_handlers$i","onSuccess","onError","flushQueue","onFinally","_this4","toPromise","all","promises","count","results","prom","hash","map","items","onPossiblyUnhandledException","context","delay","flush","promisesToFlush","_i2","promise_ZalgoPromise","POST_MESSAGE_TYPE","REQUEST","RESPONSE","ACK","POST_MESSAGE_ACK","SUCCESS","ERROR","POST_MESSAGE_NAMES","METHOD","HELLO","OPEN_TUNNEL","WINDOW_TYPES","FULLPAGE","POPUP","IFRAME","WINDOW_PROPS","POSTROBOT","SERIALIZATION_TYPES","PROMISE","ZALGO_PROMISE","REGEX","SEND_STRATEGIES","POST_MESSAGE","BRIDGE","GLOBAL","BRIDGE_NAME_PREFIX","POSTROBOT_PROXY","CONFIG","ALLOW_POSTMESSAGE_POPUP","__ALLOW_POSTMESSAGE_POPUP__","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","registerSelf","methods","listenForMethods","once","on","data","meth","isSerialized","type","__type__","serializeMethod","destination","__id__","__name__","deserializeMethod","wrapper","send","_ref2","__xdomain__","deserializeZalgoPromise","__then__","readyPromises","knownWindows","sayHello","markWindowKnown","SEND_MESSAGE_STRATEGIES","serializedMessage","dom","forEach","postMessage","sendMessage","_JSON$stringify","isPopup","isIframe","sourceDomain","_extends","windowType","buildMessage","__message__","__code__","code","serializePromise","serializeZalgoPromise","regex","__source__","serializeMethods","messages","strategyName","success","status","responseListeners","requestListeners","WINDOW_WILDCARD","erroredResponseListeners","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","nameListeners","_ref3","winQualifier","winListeners","_i4","_winListeners$__DOMAI2","_ref5","listener","RECEIVE_MESSAGE_TYPES","pathname","ack","_RECEIVE_MESSAGE_TYPE","respond","fireAndForget","types__extends","target","originalSource","noop","handleError","stringifyDomainPattern","response","receivedMessages","receiveMessage","parsedMessage","receive__typeof","parseMessage","deserializeError","deserializePromise","RegExp","deserializeRegex","deserializeMethods","messageListener","sourceElement","originalEvent","requestPromises","request","targetWindow","document","getElementById","tagName","HTMLIFrameElement","hasResult","requestPromise","isAncestor","onChildWindowReady","actualDomain","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","markResponseListenerErrored","sendToParent","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref6","listenersCollection","_i6","_win2","_i8","_length8","_i10","_domain2","_length10","_i12","_length12","existingListener","strDomain","regexListeners","regexListener","onceFunction","errorOnClose","interval","safeInterval","server__typeof","onceListener","disable","cleanUpWindow","popupWindowsByWin","remoteWindows","bridge","init","initialized","initOnReady","INTERFACE"],"mappings":"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","file":"post-robot.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"postRobot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"postRobot\"] = factory();\n\telse\n\t\troot[\"postRobot\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0602f736763f38c1c693","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/decorators.js","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/device.js","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, debounce, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady.then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        let element = document.getElementById(id);\n\n        if (element) {\n            return element;\n        }\n\n        if (document.querySelector) {\n            element = document.querySelector(id);\n        }\n\n        if (element) {\n            return element;\n        }\n    }\n}\n\nexport function getElement(id : ElementRefType) : HTMLElement {\n\n    let element = getElementSafe(id);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\nexport function popup(url : string, options : { [ string ] : mixed }) : CrossDomainWindowType {\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map((key) => {\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, options.name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : HTMLElement) : HTMLIFrameElement {\n\n    let el = getElement(container);\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    el.appendChild(frame);\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function elementStoppedMoving(element : ElementRefType, timeout : number = 5000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n        let el = getElement(element);\n\n        let start = el.getBoundingClientRect();\n\n        let interval;\n        let timer;\n\n        interval = setInterval(() => {\n            let end = el.getBoundingClientRect();\n\n            if (start.top === end.top && start.bottom === end.bottom && start.left === end.left && start.right === end.right && start.width === end.width && start.height === end.height) {\n                clearTimeout(timer);\n                clearInterval(interval);\n                return resolve();\n            }\n\n            start = end;\n\n        }, 50);\n\n        timer = setTimeout(() => {\n            clearInterval(interval);\n            reject(new Error(`Timed out waiting for element to stop animating after ${ timeout }ms`));\n        }, timeout);\n    });\n}\n\nexport function getCurrentDimensions(el : HTMLElement) : { width : number, height : number } {\n    return {\n        width:  el.offsetWidth,\n        height: el.offsetHeight\n    };\n}\n\nexport function setOverflow(el : HTMLElement, value : string = 'auto') : { reset : () => void } {\n\n    let { overflow, overflowX, overflowY } = el.style;\n\n    el.style.overflow = el.style.overflowX = el.style.overflowY = value;\n\n    return {\n        reset() {\n            el.style.overflow = overflow;\n            el.style.overflowX = overflowX;\n            el.style.overflowY = overflowY;\n        }\n    };\n}\n\nfunction dimensionsDiff(one : { width : number, height : number }, two : { width : number, height : number }, { width = true, height = true, threshold = 0 } : { width : boolean, height : boolean, threshold : number }) : boolean {\n\n    if (width && Math.abs(one.width - two.width) > threshold) {\n        return true;\n    }\n\n    if (height && Math.abs(one.height - two.height) > threshold) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trackDimensions(el : HTMLElement, { width = true, height = true, threshold = 0 } : { width : boolean, height : boolean, threshold : number }) : { check : () => { changed : boolean, dimensions : { width : number, height : number } }, reset : () => void } {\n\n    let currentDimensions = getCurrentDimensions(el);\n\n    return {\n        check() : { changed : boolean, dimensions : { width : number, height : number } } {\n            let newDimensions = getCurrentDimensions(el);\n\n            return {\n                changed:    dimensionsDiff(currentDimensions, newDimensions, { width, height, threshold }),\n                dimensions: newDimensions\n            };\n        },\n\n        reset() {\n            currentDimensions = getCurrentDimensions(el);\n        }\n    };\n}\n\nexport function onDimensionsChange(el : HTMLElement, { width = true, height = true, delay = 50, threshold = 0 } : { width? : boolean, height? : boolean, delay? : number, threshold? : number }) : ZalgoPromise<{ width : number, height : number }> {\n\n    return new ZalgoPromise(resolve => {\n\n        let tracker = trackDimensions(el, { width, height, threshold });\n\n        let interval;\n\n        let resolver = debounce((dimensions) => {\n            clearInterval(interval);\n            return resolve(dimensions);\n        }, delay * 4);\n\n        interval = setInterval(() => {\n            let { changed, dimensions } = tracker.check();\n            if (changed) {\n                tracker.reset();\n                return resolver(dimensions);\n            }\n        }, delay);\n\n        function onWindowResize() {\n            let { changed, dimensions } = tracker.check();\n            if (changed) {\n                tracker.reset();\n                window.removeEventListener('resize', onWindowResize);\n                resolver(dimensions);\n            }\n        }\n\n        window.addEventListener('resize', onWindowResize);\n    });\n}\n\nexport function dimensionsMatchViewport(el : HTMLElement, { width, height } : { width : number, height : number }) : boolean {\n\n    let dimensions = getCurrentDimensions(el);\n\n    if (width && dimensions.width !== window.innerWidth) {\n        return false;\n    }\n\n    if (height && dimensions.height !== window.innerHeight) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            setVendorCSS(el, 'animationName', '');\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    if (element.classList) {\n        element.classList.add(name);\n    } else if (element.className.split(/\\s+/).indexOf(name) === -1) {\n        element.className += ` ${ name }`;\n    }\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    if (element.classList) {\n        element.classList.remove(name);\n    } else if (element.className.split(/\\s+/).indexOf(name) !== -1) {\n        element.className = element.className.replace(name, '');\n    }\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/dom.js","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload? : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/experiment.js","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/global.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/http.js","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/index.js","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nexport function getStorage({ name, version = 'latest', lifetime = (5 * 60 * 1000) } : { name : string, version? : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_${ version }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, version, lifetime } ]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/storage.js","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof __WEB__ === 'undefined' || !__WEB__) {\n        return require('Base64').btoa(str);\n    }\n    return window.btoa(str);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof __WEB__ === 'undefined' || !__WEB__) {\n        return require('Base64').atob(str);\n    }\n    return window.atob(str);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        memoizedFunction.__calling__ = true;\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        memoizedFunction.__calling__ = false;\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string) => void,\n    triggerOnce : (eventName : string) => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string) {\n\n            let handlerList = handlers[eventName];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    handler();\n                }\n            }\n        },\n\n        triggerOnce(eventName : string) {\n\n            if (triggered[eventName]) {\n                return;\n            }\n\n            triggered[eventName] = true;\n            this.trigger(eventName);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        let result = weakmap.get(arg);\n\n        if (typeof result !== 'undefined') {\n            return result;\n        }\n\n        result = method.call(this, arg);\n\n        if (typeof result !== 'undefined') {\n            weakmap.set(arg, result);\n        }\n\n        return result;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/util.js","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/util.js","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                return weakmap.has(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/weakmap.js","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/native.js","/* @flow */\n\nexport * from './utils';\nexport * from './types';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/index.js","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/util.js","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType } from './types';\n\nconst CONSTANTS = {\n    MOCK_PROTOCOL:  'mock:',\n    FILE_PROTOCOL:  'file:',\n    ABOUT_PROTOCOL: 'about:',\n    WILDCARD:       '*'\n};\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === CONSTANTS.FILE_PROTOCOL;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === CONSTANTS.ABOUT_PROTOCOL;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === CONSTANTS.FILE_PROTOCOL) {\n        return `${ CONSTANTS.FILE_PROTOCOL }//`;\n    }\n\n    if (protocol === CONSTANTS.ABOUT_PROTOCOL) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ CONSTANTS.ABOUT_PROTOCOL }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(CONSTANTS.MOCK_PROTOCOL) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n\n    for (let i = 0; i < iframeFrames.length; i++) {\n        if (isFrameWindowClosed(iframeFrames[i])) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n\n    for (let i = 0; i < iframeWindows.length; i++) {\n        if (isWindowClosed(iframeWindows[i])) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : (string | Array<string> | RegExp), origin : (string | Array<string> | RegExp)) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === CONSTANTS.WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : (string | Array<string> | RegExp)) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/utils.js","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/utils.js","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\ntype ZalgoGlobalType = {\n    flushPromises : Array<ZalgoPromise<mixed>>,\n    activeCount : number,\n    possiblyUnhandledPromiseHandlers : Array<<T>(mixed, ZalgoPromise<T>) => void>, // eslint-disable-line no-undef\n    dispatchedErrors : Array<mixed>\n};\n\nexport function getGlobal() : ZalgoGlobalType {\n\n    let glob;\n\n    if (typeof window !== 'undefined') {\n        glob = window;\n    } else if (typeof global !== 'undefined') {\n        glob = global;\n    } else {\n        throw new TypeError(`Can not find global`);\n    }\n\n    let zalgoGlobal = glob.__zalgopromise__ = glob.__zalgopromise__ || {};\n    zalgoGlobal.flushPromises = zalgoGlobal.flushPromises || [];\n    zalgoGlobal.activeCount = zalgoGlobal.activeCount || 0;\n    zalgoGlobal.possiblyUnhandledPromiseHandlers = zalgoGlobal.possiblyUnhandledPromiseHandlers || [];\n    zalgoGlobal.dispatchedErrors = zalgoGlobal.dispatchedErrors || [];\n\n    return zalgoGlobal;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/global.js","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { getGlobal } from './global';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                this.reject(err);\n                return;\n            }\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) {\n        this.errorHandled = true;\n        this.reject(error);\n    }\n\n    // eslint-disable-next-line complexity\n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        getGlobal().activeCount += 1;\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        getGlobal().activeCount -= 1;\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            return ZalgoPromise.reject(err);\n        }\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        let promise = new ZalgoPromise();\n        getGlobal().flushPromises.push(promise);\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n\n        return promise;\n    }\n\n    static flushQueue() {\n        let promisesToFlush = getGlobal().flushPromises;\n        getGlobal().flushPromises = [];\n\n        for (let promise of promisesToFlush) {\n            promise.resolve();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/promise.js","/* @flow */\n\nimport { getGlobal } from './global';\nimport type { ZalgoPromise } from './promise';\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (getGlobal().dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    getGlobal().dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < getGlobal().possiblyUnhandledPromiseHandlers.length; j++) {\n        getGlobal().possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed) => void) : { cancel : () => void } {\n    getGlobal().possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            getGlobal().possiblyUnhandledPromiseHandlers.splice(getGlobal().possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/exceptions.js","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/index.js","/* @flow */\n\nexport let CONSTANTS = {\n\n    POST_MESSAGE_TYPE: {\n        REQUEST:  'postrobot_message_request',\n        RESPONSE: 'postrobot_message_response',\n        ACK:      'postrobot_message_ack'\n    },\n\n    POST_MESSAGE_ACK: {\n        SUCCESS: 'success',\n        ERROR:   'error'\n    },\n\n    POST_MESSAGE_NAMES: {\n        METHOD:      'postrobot_method',\n        HELLO:       'postrobot_ready',\n        OPEN_TUNNEL: 'postrobot_open_tunnel'\n    },\n\n    WINDOW_TYPES: {\n        FULLPAGE: 'fullpage',\n        POPUP:    'popup',\n        IFRAME:   'iframe'\n    },\n\n    WINDOW_PROPS: {\n        POSTROBOT: '__postRobot__'\n    },\n\n    SERIALIZATION_TYPES: {\n        METHOD:        'postrobot_method',\n        ERROR:         'postrobot_error',\n        PROMISE:       'postrobot_promise',\n        ZALGO_PROMISE: 'postrobot_zalgo_promise',\n        REGEX:         'regex'\n    },\n\n    SEND_STRATEGIES: {\n        POST_MESSAGE: 'postrobot_post_message',\n        BRIDGE:       'postrobot_bridge',\n        GLOBAL:       'postrobot_global'\n    },\n\n    MOCK_PROTOCOL: 'mock:',\n    FILE_PROTOCOL: 'file:',\n\n    BRIDGE_NAME_PREFIX: '__postrobot_bridge__',\n    POSTROBOT_PROXY:    '__postrobot_proxy__',\n\n    WILDCARD: '*'\n};\n\nexport const POST_MESSAGE_NAMES = {\n    METHOD:      'postrobot_method',\n    HELLO:       'postrobot_hello',\n    OPEN_TUNNEL: 'postrobot_open_tunnel'\n};\n\nexport let POST_MESSAGE_NAMES_LIST : Array<string> = Object.keys(POST_MESSAGE_NAMES)\n    .map(key => POST_MESSAGE_NAMES[key]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/constants.js","/* @flow */\n\nimport { CONSTANTS } from './constants';\n\nexport let CONFIG : Object = {\n\n    ALLOW_POSTMESSAGE_POPUP: ('__ALLOW_POSTMESSAGE_POPUP__' in window)\n        ? window.__ALLOW_POSTMESSAGE_POPUP__\n        : __POST_ROBOT__.__ALLOW_POSTMESSAGE_POPUP__,\n\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT:       2000,\n    ACK_TIMEOUT_KNOWN: 10000,\n    RES_TIMEOUT:       __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ CONSTANTS.SEND_STRATEGIES.POST_MESSAGE ]: true,\n        [ CONSTANTS.SEND_STRATEGIES.BRIDGE ]:       true,\n        [ CONSTANTS.SEND_STRATEGIES.GLOBAL ]:       true\n    }\n};\n\nif (window.location.href.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n    CONFIG.ALLOW_POSTMESSAGE_POPUP = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/config.js","/* @flow */\n\nimport { CONSTANTS } from './conf';\n\nexport let global : Object = window[CONSTANTS.WINDOW_PROPS.POSTROBOT] = window[CONSTANTS.WINDOW_PROPS.POSTROBOT] || {};\n\n// Backwards compatibility\n\nglobal.registerSelf = () => {\n    // pass\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/global.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, uniqueID, replaceObject, stringifyError, isRegex } from 'belter/src';\n\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\n\nglobal.methods = global.methods || new WeakMap();\n\nexport let listenForMethods = once(() => {\n    global.on(CONSTANTS.POST_MESSAGE_NAMES.METHOD, { origin: CONSTANTS.WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n\n        let methods = global.methods.get(source);\n\n        if (!methods) {\n            throw new Error(`Could not find any methods this window has privileges to call`);\n        }\n\n        let meth = methods[data.id];\n\n        if (!meth) {\n            throw new Error(`Could not find method with id: ${ data.id }`);\n        }\n\n        if (!matchDomain(meth.domain, origin)) {\n            throw new Error(`Method domain ${ meth.domain } does not match origin ${ origin }`);\n        }\n\n        return ZalgoPromise.try(() => {\n            return meth.method.apply({ source, origin, data }, data.args);\n\n        }).then(result => {\n\n            return {\n                result,\n                id:   data.id,\n                name: data.name\n            };\n        });\n    });\n});\n\nfunction isSerialized(item : mixed, type : string) : boolean {\n    return typeof item === 'object' && item !== null && item.__type__ === type;\n}\n\ntype SerializedMethod = {\n    __type__ : string,\n    __id__ : string,\n    __name__ : string\n};\n\nexport function serializeMethod(destination : CrossDomainWindowType, domain : string | Array<string>, method : Function, name : string) : SerializedMethod {\n\n    let id = uniqueID();\n\n    let methods = global.methods.get(destination);\n\n    if (!methods) {\n        methods = {};\n        global.methods.set(destination, methods);\n    }\n\n    methods[id] = { domain, method };\n\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.METHOD,\n        __id__:   id,\n        __name__: name\n    };\n}\n\ntype SerializedError = {\n    __type__ : string,\n    __message__ : string\n};\n\nfunction serializeError(err : mixed) : SerializedError {\n    return {\n        __type__:    CONSTANTS.SERIALIZATION_TYPES.ERROR,\n        __message__: stringifyError(err),\n        // $FlowFixMe\n        __code__:    err.code\n    };\n}\n\ntype SerializePromise = {\n    __type__ : string,\n    __then__ : SerializedMethod\n};\n\nfunction serializePromise(destination : CrossDomainWindowType, domain : string | Array<string>, promise : ZalgoPromise<mixed>, name : string) : SerializePromise {\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.PROMISE,\n        __then__: serializeMethod(destination, domain, (resolve, reject) => promise.then(resolve, reject), `${ name }.then`)\n    };\n}\n\nfunction serializeZalgoPromise(destination : CrossDomainWindowType, domain : string | Array<string>, promise : ZalgoPromise<mixed>, name : string) : SerializePromise {\n    return {\n        __type__: CONSTANTS.SERIALIZATION_TYPES.ZALGO_PROMISE,\n        __then__: serializeMethod(destination, domain, (resolve, reject) => promise.then(resolve, reject), `${ name }.then`)\n    };\n}\n\ntype SerializedRegex = {\n    __type__ : string,\n    __source__ : string\n};\n\nfunction serializeRegex(regex : RegExp) : SerializedRegex {\n    return {\n        __type__:   CONSTANTS.SERIALIZATION_TYPES.REGEX,\n        __source__: regex.source\n    };\n}\n\nexport function serializeMethods(destination : CrossDomainWindowType, domain : string | Array<string>, obj : Object) : Object {\n\n    return replaceObject({ obj }, (item, key) => {\n        if (typeof item === 'function') {\n            return serializeMethod(destination, domain, item, key.toString());\n        }\n\n        if (item instanceof Error) {\n            return serializeError(item);\n        }\n\n        if (window.Promise && item instanceof window.Promise) {\n            return serializePromise(destination, domain, item, key.toString());\n        }\n\n        if (ZalgoPromise.isPromise(item)) {\n            // $FlowFixMe\n            return serializeZalgoPromise(destination, domain, item, key.toString());\n        }\n\n        if (isRegex(item)) {\n            // $FlowFixMe\n            return serializeRegex(item);\n        }\n\n        return item;\n    }).obj;\n}\n\nexport function deserializeMethod(source : CrossDomainWindowType, origin : string, obj : Object) : Function {\n\n    function wrapper() : ZalgoPromise<mixed> {\n        let args = Array.prototype.slice.call(arguments);\n        return global.send(source, CONSTANTS.POST_MESSAGE_NAMES.METHOD, {\n            id:   obj.__id__,\n            name: obj.__name__,\n            args\n\n        }, { domain: origin, timeout: -1 }).then(({ data }) => {\n            return data.result;\n        }, err => {\n            throw err;\n        });\n    }\n\n    wrapper.__name__ = obj.__name__;\n    wrapper.__xdomain__ = true;\n\n    wrapper.source = source;\n    wrapper.origin = origin;\n\n    return wrapper;\n}\n\nexport function deserializeError(source : CrossDomainWindowType, origin : string, obj : Object) : Error {\n    let err = new Error(obj.__message__);\n    if (obj.__code__) {\n        // $FlowFixMe\n        err.code = obj.__code__;\n    }\n    return err;\n}\n\nexport function deserializeZalgoPromise(source : CrossDomainWindowType, origin : string, prom : Object) : ZalgoPromise<mixed> {\n    return new ZalgoPromise((resolve, reject) => deserializeMethod(source, origin, prom.__then__)(resolve, reject));\n}\n\nexport function deserializePromise(source : CrossDomainWindowType, origin : string, prom : Object) : ZalgoPromise<mixed> {\n    if (!window.Promise) {\n        return deserializeZalgoPromise(source, origin, prom);\n    }\n\n    return new window.Promise((resolve, reject) => deserializeMethod(source, origin, prom.__then__)(resolve, reject));\n}\n\nexport function deserializeRegex(source : CrossDomainWindowType, origin : string, item : Object) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(item.__source__);\n}\n\nexport function deserializeMethods(source : CrossDomainWindowType, origin : string, obj : Object) : Object {\n\n    return replaceObject({ obj }, (item) => {\n        if (typeof item !== 'object' || item === null) {\n            return item;\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.METHOD)) {\n            return deserializeMethod(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.ERROR)) {\n            return deserializeError(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.PROMISE)) {\n            return deserializePromise(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.ZALGO_PROMISE)) {\n            return deserializeZalgoPromise(source, origin, item);\n        }\n\n        if (isSerialized(item, CONSTANTS.SERIALIZATION_TYPES.REGEX)) {\n            return deserializeRegex(source, origin, item);\n        }\n\n        return item;\n    }).obj;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/serialize.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop } from 'belter/src';\n\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\n\nglobal.readyPromises = global.readyPromises || new WeakMap();\nglobal.knownWindows = global.knownWindows || new WeakMap();\n\nexport function onHello(handler : ({ source? : CrossDomainWindowType, origin? : string }) => void) {\n    global.on(CONSTANTS.POST_MESSAGE_NAMES.HELLO, { domain: CONSTANTS.WILDCARD }, ({ source, origin }) => {\n        return handler({ source, origin });\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ origin : string }> {\n    return global.send(win, CONSTANTS.POST_MESSAGE_NAMES.HELLO, {}, { domain: CONSTANTS.WILDCARD, timeout: -1 })\n        .then(({ origin }) => {\n            return { origin };\n        });\n}\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    global.knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    return global.knownWindows.get(win);\n}\n\nexport function initOnReady() {\n\n    onHello(({ source, origin }) => {\n        let promise = global.readyPromises.get(source) || new ZalgoPromise();\n        promise.resolve({ origin });\n        global.readyPromises.set(source, promise);\n    });\n\n    let parent = getAncestor();\n    if (parent) {\n        sayHello(parent).catch(noop);\n    }\n}\n\nexport function onChildWindowReady(win : mixed, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ origin : string }> {\n\n    let promise = global.readyPromises.get(win);\n\n    if (promise) {\n        return promise;\n    }\n\n    promise = new ZalgoPromise();\n    global.readyPromises.set(win, promise);\n\n    if (timeout !== -1) {\n        setTimeout(() => promise.reject(new Error(`${ name } did not load after ${ timeout }ms`)), timeout);\n    }\n\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ready.js","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { CONSTANTS } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : (string | Array<string>)) => {\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(window, win);\n        } catch (err) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ CONSTANTS.WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(CONSTANTS.MOCK_PROTOCOL) === 0) {\n\n            if (window.location.protocol === CONSTANTS.FILE_PROTOCOL) {\n                return CONSTANTS.WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n            return CONSTANTS.WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, serializedMessage, domain);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[CONSTANTS.SEND_STRATEGIES.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/strategies.js","/* @flow */\n\nimport { getDomain, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { CONSTANTS, CONFIG, POST_MESSAGE_NAMES_LIST } from '../../conf';\nimport { serializeMethods, getWindowType } from '../../lib';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\n\nfunction buildMessage(win : CrossDomainWindowType, message : Object, options = {}) : Object {\n\n    let id   = uniqueID();\n    let type = getWindowType();\n    let sourceDomain = getDomain(window);\n\n    return {\n        ...message,\n        ...options,\n        sourceDomain,\n        id:         message.id || id,\n        windowType: type\n    };\n}\n\n\nexport function sendMessage(win : CrossDomainWindowType, message : Object, domain : string | Array<string>) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        message = buildMessage(win, message, {\n            data: serializeMethods(win, domain, message.data),\n            domain\n        });\n\n        let level;\n\n        if (__DEBUG__) {\n            if (POST_MESSAGE_NAMES_LIST.indexOf(message.name) !== -1 || message.type === CONSTANTS.POST_MESSAGE_TYPE.ACK) {\n                level = 'debug';\n            } else if (message.ack === 'error') {\n                level = 'error';\n            } else {\n                level = 'info';\n            }\n\n            // eslint-disable-next-line no-console\n            if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n                // eslint-disable-next-line no-console\n                console[level]('postrobot_send', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', domain || CONSTANTS.WILDCARD, '\\n\\n', message);\n            }\n        }\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n\n        let messages = [];\n\n        let serializedMessage = JSON.stringify({\n            [ CONSTANTS.WINDOW_PROPS.POSTROBOT ]: message\n        }, null, 2);\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/index.js","/* @flow */\n\nimport { isPopup, isIframe, getUserAgent } from 'cross-domain-utils/src';\n\nimport { CONFIG, CONSTANTS } from '../conf';\n\n\nexport function getWindowType() : string {\n    if (isPopup()) {\n        return CONSTANTS.WINDOW_TYPES.POPUP;\n    }\n    if (isIframe()) {\n        return CONSTANTS.WINDOW_TYPES.IFRAME;\n    }\n    return CONSTANTS.WINDOW_TYPES.FULLPAGE;\n}\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    if (!CONFIG.ALLOW_POSTMESSAGE_POPUP) {\n        return true;\n    }\n\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/util.js","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { isRegex } from 'belter/src';\n\nimport { global } from '../global';\nimport { CONSTANTS } from '../conf';\n\nexport function resetListeners() {\n    global.responseListeners = {};\n    global.requestListeners  = {};\n}\n\nglobal.responseListeners = global.responseListeners || {};\nglobal.requestListeners  = global.requestListeners  || {};\nglobal.WINDOW_WILDCARD   = global.WINDOW_WILDCARD   || new (function WindowWildcard() { /* pass */ })();\n\nglobal.erroredResponseListeners = global.erroredResponseListeners || {};\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : Object }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : string | RegExp | Array<string>\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : (string | Array<string> | RegExp),\n    respond : (err : ?mixed, result : ?Object) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    global.responseListeners[hash] = listener;\n}\n\nexport function getResponseListener(hash : string) : ResponseListenerType {\n    return global.responseListeners[hash];\n}\n\nexport function deleteResponseListener(hash : string) {\n    delete global.responseListeners[hash];\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    global.erroredResponseListeners[hash] = true;\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return Boolean(global.erroredResponseListeners[hash]);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === CONSTANTS.WILDCARD) {\n        win = null;\n    }\n\n    if (domain === CONSTANTS.WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    let nameListeners = global.requestListeners[name];\n\n    if (!nameListeners) {\n        return;\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n\n        let winListeners = winQualifier && nameListeners.get(winQualifier);\n\n        if (!winListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (winListeners[domain]) {\n                return winListeners[domain];\n            }\n\n            if (winListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of winListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (winListeners[CONSTANTS.WILDCARD]) {\n            return winListeners[CONSTANTS.WILDCARD];\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp | Array<string>) }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === CONSTANTS.WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || CONSTANTS.WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let requestListeners = global.requestListeners;\n\n    let nameListeners = requestListeners[name];\n\n    if (!nameListeners) {\n        nameListeners = new WeakMap();\n        requestListeners[name] = nameListeners;\n    }\n\n    let winListeners  = nameListeners.get(win);\n\n    if (!winListeners) {\n        winListeners = {};\n        nameListeners.set(win, winListeners);\n    }\n\n    let strDomain = domain.toString();\n\n    let regexListeners = winListeners[__DOMAIN_REGEX__];\n    let regexListener;\n\n    if (isRegex(domain)) {\n\n        if (!regexListeners) {\n            regexListeners = [];\n            winListeners[__DOMAIN_REGEX__] = regexListeners;\n        }\n\n        regexListener = { regex: domain, listener };\n\n        regexListeners.push(regexListener);\n\n    } else {\n        winListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            if (!winListeners) {\n                return;\n            }\n\n            delete winListeners[strDomain];\n\n            if (win && Object.keys(winListeners).length === 0) {\n                nameListeners.delete(win);\n            }\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n            }\n        }\n\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/listeners.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { CONSTANTS } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : Object) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : Object) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        function respond(data) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            return sendMessage(source, {\n                target: message.originalSource,\n                hash:   message.hash,\n                name:   message.name,\n                ...data\n            }, origin);\n        }\n\n        return ZalgoPromise.all([\n\n            respond({\n                type: CONSTANTS.POST_MESSAGE_TYPE.ACK\n            }),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n\n                return respond({\n                    type: CONSTANTS.POST_MESSAGE_TYPE.RESPONSE,\n                    ack:  CONSTANTS.POST_MESSAGE_ACK.SUCCESS,\n                    data\n                });\n\n            }, err => {\n\n                let error = stringifyError(err).replace(/^Error: /, '');\n                // $FlowFixMe\n                let code = err.code;\n\n                return respond({\n                    type: CONSTANTS.POST_MESSAGE_TYPE.RESPONSE,\n                    ack:  CONSTANTS.POST_MESSAGE_ACK.ERROR,\n                    error,\n                    code\n                });\n            })\n\n        ]).then(noop).catch(err => {\n\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ CONSTANTS.POST_MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : Object) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === CONSTANTS.POST_MESSAGE_ACK.ERROR) {\n            let err = new Error(message.error);\n            if (message.code) {\n                // $FlowFixMe\n                err.code = message.code;\n            }\n            return options.respond(err, null);\n        } else if (message.ack === CONSTANTS.POST_MESSAGE_ACK.SUCCESS) {\n            let data = message.data || message.response;\n\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/types.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { CONSTANTS, POST_MESSAGE_NAMES_LIST } from '../../conf';\nimport { deserializeMethods, markWindowKnown } from '../../lib';\nimport { global } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nglobal.receivedMessages = global.receivedMessages || [];\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = JSON.parse(message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    let message = parseMessage(data);\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (!message.sourceDomain || typeof message.sourceDomain !== 'string') {\n        throw new Error(`Expected message to have sourceDomain`);\n    }\n\n    if (message.sourceDomain.indexOf(CONSTANTS.MOCK_PROTOCOL) === 0 || message.sourceDomain.indexOf(CONSTANTS.FILE_PROTOCOL) === 0) {\n        origin = message.sourceDomain;\n    }\n\n    if (global.receivedMessages.indexOf(message.id) === -1) {\n        global.receivedMessages.push(message.id);\n    } else {\n        return;\n    }\n\n    if (__DEBUG__) {\n        let level;\n\n        if (POST_MESSAGE_NAMES_LIST.indexOf(message.name) !== -1 || message.type === CONSTANTS.POST_MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_receive', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', origin, '\\n\\n', message);\n        }\n    }\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.data) {\n        message.data = deserializeMethods(source, origin, message.data);\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(messageEvent.source, window);\n        } catch (err) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    // $FlowFixMe\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/index.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex } from 'belter/src';\n\n\nimport { CONFIG, CONSTANTS } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { onChildWindowReady, sayHello, isWindowKnown } from '../lib';\nimport { global } from '../global';\n\nglobal.requestPromises = global.requestPromises || new WeakMap();\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?(string | Array<string> | RegExp),\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : string | Array<string> | RegExp;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || CONSTANTS.WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let requestPromises = global.requestPromises.get(win);\n\n        if (!requestPromises) {\n            requestPromises = [];\n            global.requestPromises.set(win, requestPromises);\n        }\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return onChildWindowReady(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                requestPromises.splice(requestPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                sendMessage(win, {\n                    type:          CONSTANTS.POST_MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: options.fireAndForget\n                }, actualDomain).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let totalAckTimeout = isWindowKnown(win) ? CONFIG.ACK_TIMEOUT_KNOWN : CONFIG.ACK_TIMEOUT;\n                let totalResTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let ackTimeout = totalAckTimeout;\n                let resTimeout = totalResTimeout;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        requestPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/client.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once as onceFunction, safeInterval } from 'belter/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { CONSTANTS } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : Object }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?(string | RegExp | Array<string>),\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || CONSTANTS.WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/server.js","/* @flow */\n\nimport { CONSTANTS } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG, CONSTANTS } from '../conf';\n\nexport function disable() {\n    delete window[CONSTANTS.WINDOW_PROPS.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/config.js","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/index.js","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { global } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n\n    // global.tunnelWindows\n    // global.bridges\n    // global.popupWindowsByName\n    // global.responseListeners\n    // global.requestListeners\n\n    let requestPromises = global.requestPromises.get(win);\n\n    if (requestPromises) {\n        for (let promise of requestPromises) {\n            promise.reject(new Error(`No response from window - cleaned up`));\n        }\n    }\n\n    if (global.popupWindowsByWin) {\n        global.popupWindowsByWin.delete(win);\n    }\n\n    if (global.remoteWindows) {\n        global.remoteWindows.delete(win);\n    }\n\n    global.requestPromises.delete(win);\n    global.methods.delete(win);\n    global.readyPromises.delete(win);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clean.js","/* @flow */\n\nimport { initOnReady, listenForMethods } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\nimport { on, send } from './public';\n\nexport * from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nexport function init() {\n    if (!global.initialized) {\n        listenForMessages();\n\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            require('./bridge').openTunnelToOpener();\n        }\n\n        initOnReady();\n        listenForMethods({ on, send });\n    }\n\n    global.initialized = true;\n}\n\ninit();\n\n\n\n// WEBPACK FOOTER //\n// ./src/interface.js","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}