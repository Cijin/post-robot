{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 68297cf62c774d430973","webpack:///./node_modules/belter/src/decorators.js","webpack:///./node_modules/belter/src/device.js","webpack:///./node_modules/belter/src/dom.js","webpack:///./node_modules/belter/src/experiment.js","webpack:///./node_modules/belter/src/global.js","webpack:///./node_modules/belter/src/http.js","webpack:///./node_modules/belter/src/index.js","webpack:///./node_modules/belter/src/storage.js","webpack:///./node_modules/belter/src/util.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/util.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/native.js","webpack:///./node_modules/cross-domain-utils/src/constants.js","webpack:///./node_modules/cross-domain-utils/src/index.js","webpack:///./node_modules/cross-domain-utils/src/util.js","webpack:///./node_modules/cross-domain-utils/src/utils.js","webpack:///./node_modules/zalgo-promise/src/utils.js","webpack:///./node_modules/zalgo-promise/src/global.js","webpack:///./node_modules/zalgo-promise/src/promise.js","webpack:///./node_modules/zalgo-promise/src/exceptions.js","webpack:///./node_modules/zalgo-promise/src/index.js","webpack:///./src/conf/constants.js","webpack:///./src/conf/config.js","webpack:///./src/global.js","webpack:///./src/lib/hello.js","webpack:///./src/lib/windows.js","webpack:///./node_modules/universal-serialize/src/constants.js","webpack:///./node_modules/universal-serialize/src/common.js","webpack:///./node_modules/universal-serialize/src/serialize.js","webpack:///./node_modules/universal-serialize/src/serializers/function.js","webpack:///./node_modules/universal-serialize/src/serializers/error.js","webpack:///./node_modules/universal-serialize/src/serializers/promise.js","webpack:///./node_modules/universal-serialize/src/serializers/regex.js","webpack:///./node_modules/universal-serialize/src/serializers/date.js","webpack:///./node_modules/universal-serialize/src/serializers/array.js","webpack:///./node_modules/universal-serialize/src/serializers/object.js","webpack:///./node_modules/universal-serialize/src/serializers/string.js","webpack:///./node_modules/universal-serialize/src/serializers/number.js","webpack:///./node_modules/universal-serialize/src/serializers/boolean.js","webpack:///./node_modules/universal-serialize/src/serializers/null.js","webpack:///./node_modules/universal-serialize/src/deserialize.js","webpack:///./src/serialize/window.js","webpack:///./src/serialize/function.js","webpack:///./src/serialize/serialize.js","webpack:///./src/serialize/promise.js","webpack:///./src/drivers/send/strategies.js","webpack:///./src/drivers/send/index.js","webpack:///./src/drivers/listeners.js","webpack:///./src/drivers/receive/types.js","webpack:///./src/drivers/receive/index.js","webpack:///./src/public/client.js","webpack:///./src/public/server.js","webpack:///./src/public/config.js","webpack:///./src/public/index.js","webpack:///./src/clean.js","webpack:///./src/interface.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","window","navigator","mockUserAgent","userAgent","match","isLocalStorageEnabled","inlineMemoize","localStorage","value","Math","random","toString","setItem","result","getItem","removeItem","err","obj","event","handler","addEventListener","cancel","removeEventListener","create","Error","__WEBPACK_IMPORTED_MODULE_1__dom__","__WEBPACK_IMPORTED_MODULE_5__util__","__WEBPACK_IMPORTED_MODULE_7__types__","getStorage","_ref","_ref$version","version","undefined","_ref$lifetime","lifetime","STORAGE_KEY","accessedStorage","getState","localStorageEnabled","storage","rawStorage","JSON","parse","getGlobal","id","uniqueID","stringify","getSession","session","__session__","now","Date","created","guid","getID","getSessionState","state","getSessionID","__WEBPACK_IMPORTED_MODULE_0__util__","global","__GLOBAL__","method","_this","options","arguments","length","cacheMap","WeakMap","memoizedFunction","_len","args","Array","_key","cache","getOrSet","thisNamespace","key","serializeArgs","cacheTime","time","apply","reset","displayName","memoizedPromiseFunction","_len2","_key2","promisifiedFunction","ZalgoPromise","logic","__inline_memoize_cache__","called","stringifyError","level","stack","message","indexOf","newErr","item","source","assign","timeout","loop","setTimeout","clearTimeout","string","charAt","toUpperCase","slice","toLowerCase","_this3","_arguments2","val","str","chars","replace","floor","toISOString","btoa","objectIDs","subkey","_typeof","uid","set","getObjectID","weakMapMemoizePromise","weakmap","arg","_this5","safeIndexOf","collection","counter","CrossDomainSafeWeakMap","_classCallCheck","freeze","testWeakMap","testKey","hasNativeWeakMap","keys","values","_cleanupClosedWindows","isWindow","isWindowClosed","splice","isSafeToReadWrite","entry","writable","index","push","has","PROTOCOL","WILDCARD","MOCK","FILE","ABOUT","__WEBPACK_IMPORTED_MODULE_0__utils__","__WEBPACK_IMPORTED_MODULE_1__types__","isRegex","getAllWindows","win","frames","top","getTop","concat","getAllChildFrames","getAllFramesInWindow","opener","getOpener","getNextOpener","frame","iframeFrames","isFrameWindowClosed","iframeWindows","cleanIframes","contentWindow","parent","child","actualParent","getAncestor","_i16","_getFrames8","getFrames","_length14","matchDomain","pattern","origin","isArray","Boolean","some","subpattern","join","IE_WIN_ACCESS_ERROR","Window","__cross_domain_utils_window_check__","isAboutProtocol","location","protocol","getParent","canReadFromWindow","href","getActualDomain","host","getDomain","domain","mockDomain","isActuallySameDomain","desc","getOwnPropertyDescriptor","isSameDomain","isAncestorParent","childParent","getParents","len","_i3","_getFrames2","_length2","_i5","_getAllChildFrames2","_length4","childFrame","_i7","_getAllChildFrames4","_length6","parentNode","doc","ownerDocument","documentElement","contains","allowMock","closed","mockclosed","iframeIndex","isPromise","Promise","constructor","then","glob","TypeError","zalgoGlobal","__zalgopromise__","flushPromises","activeCount","possiblyUnhandledPromiseHandlers","dispatchedErrors","resolved","rejected","errorHandled","handlers","error","isAsync","res","resolve","reject","dispatch","_this2","promise","j","dispatchPossiblyUnhandledError","asyncReject","dispatching","_loop","_handlers$i","onSuccess","onError","flushQueue","onFinally","_this4","toPromise","all","promises","count","results","_loop2","prom","hash","map","items","onPossiblyUnhandledException","context","delay","flush","promisesToFlush","_i2","promise_ZalgoPromise","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","WINDOW_PROP","POSTROBOT","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","CONFIG","ALLOW_POSTMESSAGE_POPUP","__ALLOW_POSTMESSAGE_POPUP__","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","registerSelf","instanceID","helloPromises","onHello","getHelloPromise","listenForHello","once","on","sayHello","send","_ref2","data","getWindowInstanceID","_ref3","knownWindows","markWindowKnown","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","_SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","winToProxyWindow","idToProxyWindow","ProxyWindow","serializedWindow","actualWindow","actualWindowPromise","setWindow","getInstanceID","memoizePromise","setLocation","setName","frameElement","setAttribute","close","focus","isClosed","matchWindow","_this6","unwrap","awaitWindow","serialize","isProxyWindow","toProxyWindow","deserialize","methods","proxyWindowMethods","listeningForFunctions","listenForFunctionCalls","meth","proxy","serializeFunction","destination","serializeMessage","_serialize","serializers","serializer","serializePromise","deserializeMessage","_deserialize","deserializers","deserializer","serializedPromise","serializedFunction","crossDomainFunctionWrapper","fireAndForget","__name__","__xdomain__","deserializeFunction","SEND_MESSAGE_STRATEGIES","serializedMessage","dom","forEach","postMessage","sendMessage","_serializeMessage","_extends","messages","strategyName","success","status","responseListeners","requestListeners","WINDOW_WILDCARD","erroredResponseListeners","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","nameListeners","winQualifier","winListeners","_i4","_winListeners$__DOMAI2","_ref5","regex","listener","RECEIVE_MESSAGE_TYPES","sendResponse","types__extends","pathname","ack","noop","handleError","_RECEIVE_MESSAGE_TYPE","stringifyDomainPattern","respond","receivedMessages","receiveMessage","parsedMessage","receive__typeof","parseMessage","messageListener","sourceElement","originalEvent","requestPromises","request","targetWindow","el","document","getElementById","tagName","HTMLIFrameElement","hasResult","requestPromise","isAncestor","awaitWindowHello","actualDomain","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","markResponseListenerErrored","sendToParent","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref6","listenersCollection","_i6","_win2","_i8","_length8","_i10","_domain2","_length10","_i12","_length12","existingListener","strDomain","regexListeners","regexListener","onceFunction","errorOnClose","interval","safeInterval","server__typeof","onceListener","disable","cleanUpWindow","popupWindowsByWin","remoteWindows","bridge","initialized","openTunnelToOpener","_getAllWindows2","initHello","INTERFACE"],"mappings":"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","file":"post-robot.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"postRobot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"postRobot\"] = factory();\n\telse\n\t\troot[\"postRobot\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 68297cf62c774d430973","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/decorators.js","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/device.js","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, debounce, safeInterval, uniqueID } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady.then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        let element = document.getElementById(id);\n\n        if (element) {\n            return element;\n        }\n\n        if (document.querySelector) {\n            element = document.querySelector(id);\n        }\n\n        if (element) {\n            return element;\n        }\n    }\n}\n\nexport function getElement(id : ElementRefType) : HTMLElement {\n\n    let element = getElementSafe(id);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    options = {\n        top,\n        left,\n        width,\n        height,\n        status:     1,\n        toolbar:    0,\n        menubar:    0,\n        resizable:  1,\n        scrollbars: 1,\n        ...options\n    };\n\n    let name = options.name || uniqueID();\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : HTMLElement) : HTMLIFrameElement {\n\n    let el = getElement(container);\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    el.appendChild(frame);\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function elementStoppedMoving(element : ElementRefType, timeout : number = 5000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n        let el = getElement(element);\n\n        let start = el.getBoundingClientRect();\n\n        let interval;\n        let timer;\n\n        interval = setInterval(() => {\n            let end = el.getBoundingClientRect();\n\n            if (start.top === end.top && start.bottom === end.bottom && start.left === end.left && start.right === end.right && start.width === end.width && start.height === end.height) {\n                clearTimeout(timer);\n                clearInterval(interval);\n                return resolve();\n            }\n\n            start = end;\n\n        }, 50);\n\n        timer = setTimeout(() => {\n            clearInterval(interval);\n            reject(new Error(`Timed out waiting for element to stop animating after ${ timeout }ms`));\n        }, timeout);\n    });\n}\n\nexport function getCurrentDimensions(el : HTMLElement) : { width : number, height : number } {\n    return {\n        width:  el.offsetWidth,\n        height: el.offsetHeight\n    };\n}\n\nexport function setOverflow(el : HTMLElement, value : string = 'auto') : { reset : () => void } {\n\n    let { overflow, overflowX, overflowY } = el.style;\n\n    el.style.overflow = el.style.overflowX = el.style.overflowY = value;\n\n    return {\n        reset() {\n            el.style.overflow = overflow;\n            el.style.overflowX = overflowX;\n            el.style.overflowY = overflowY;\n        }\n    };\n}\n\nfunction dimensionsDiff(one : { width : number, height : number }, two : { width : number, height : number }, { width = true, height = true, threshold = 0 } : { width : boolean, height : boolean, threshold : number }) : boolean {\n\n    if (width && Math.abs(one.width - two.width) > threshold) {\n        return true;\n    }\n\n    if (height && Math.abs(one.height - two.height) > threshold) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trackDimensions(el : HTMLElement, { width = true, height = true, threshold = 0 } : { width : boolean, height : boolean, threshold : number }) : { check : () => { changed : boolean, dimensions : { width : number, height : number } }, reset : () => void } {\n\n    let currentDimensions = getCurrentDimensions(el);\n\n    return {\n        check() : { changed : boolean, dimensions : { width : number, height : number } } {\n            let newDimensions = getCurrentDimensions(el);\n\n            return {\n                changed:    dimensionsDiff(currentDimensions, newDimensions, { width, height, threshold }),\n                dimensions: newDimensions\n            };\n        },\n\n        reset() {\n            currentDimensions = getCurrentDimensions(el);\n        }\n    };\n}\n\nexport function onDimensionsChange(el : HTMLElement, { width = true, height = true, delay = 50, threshold = 0 } : { width? : boolean, height? : boolean, delay? : number, threshold? : number }) : ZalgoPromise<{ width : number, height : number }> {\n\n    return new ZalgoPromise(resolve => {\n\n        let tracker = trackDimensions(el, { width, height, threshold });\n\n        let interval;\n\n        let resolver = debounce((dimensions) => {\n            clearInterval(interval);\n            return resolve(dimensions);\n        }, delay * 4);\n\n        interval = setInterval(() => {\n            let { changed, dimensions } = tracker.check();\n            if (changed) {\n                tracker.reset();\n                return resolver(dimensions);\n            }\n        }, delay);\n\n        function onWindowResize() {\n            let { changed, dimensions } = tracker.check();\n            if (changed) {\n                tracker.reset();\n                window.removeEventListener('resize', onWindowResize);\n                resolver(dimensions);\n            }\n        }\n\n        window.addEventListener('resize', onWindowResize);\n    });\n}\n\nexport function dimensionsMatchViewport(el : HTMLElement, { width, height } : { width : number, height : number }) : boolean {\n\n    let dimensions = getCurrentDimensions(el);\n\n    if (width && dimensions.width !== window.innerWidth) {\n        return false;\n    }\n\n    if (height && dimensions.height !== window.innerHeight) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            setVendorCSS(el, 'animationName', '');\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    if (element.classList) {\n        element.classList.add(name);\n    } else if (element.className.split(/\\s+/).indexOf(name) === -1) {\n        element.className += ` ${ name }`;\n    }\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    if (element.classList) {\n        element.classList.remove(name);\n    } else if (element.className.split(/\\s+/).indexOf(name) !== -1) {\n        element.className = element.className.replace(name, '');\n    }\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/dom.js","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload? : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/experiment.js","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/global.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/http.js","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/index.js","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nexport function getStorage({ name, version = 'latest', lifetime = (5 * 60 * 1000) } : { name : string, version? : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_${ version }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, version, lifetime } ]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/storage.js","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof __WEB__ === 'undefined' || !__WEB__) {\n        return require('Base64').btoa(str);\n    }\n    return window.btoa(str);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof __WEB__ === 'undefined' || !__WEB__) {\n        return require('Base64').atob(str);\n    }\n    return window.atob(str);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string) => void,\n    triggerOnce : (eventName : string) => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string) {\n\n            let handlerList = handlers[eventName];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    handler();\n                }\n            }\n        },\n\n        triggerOnce(eventName : string) {\n\n            if (triggered[eventName]) {\n                return;\n            }\n\n            triggered[eventName] = true;\n            this.trigger(eventName);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/util.js","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/util.js","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                return weakmap.has(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/weakmap.js","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/native.js","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/constants.js","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/index.js","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/util.js","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n\n    for (let i = 0; i < iframeFrames.length; i++) {\n        if (isFrameWindowClosed(iframeFrames[i])) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n\n    for (let i = 0; i < iframeWindows.length; i++) {\n        if (isWindowClosed(iframeWindows[i])) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : (string | Array<string> | RegExp), origin : (string | Array<string> | RegExp)) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : (string | Array<string> | RegExp)) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/utils.js","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/utils.js","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\ntype ZalgoGlobalType = {\n    flushPromises : Array<ZalgoPromise<mixed>>,\n    activeCount : number,\n    possiblyUnhandledPromiseHandlers : Array<<T>(mixed, ZalgoPromise<T>) => void>, // eslint-disable-line no-undef\n    dispatchedErrors : Array<mixed>\n};\n\nexport function getGlobal() : ZalgoGlobalType {\n\n    let glob;\n\n    if (typeof window !== 'undefined') {\n        glob = window;\n    } else if (typeof global !== 'undefined') {\n        glob = global;\n    } else {\n        throw new TypeError(`Can not find global`);\n    }\n\n    let zalgoGlobal = glob.__zalgopromise__ = glob.__zalgopromise__ || {};\n    zalgoGlobal.flushPromises = zalgoGlobal.flushPromises || [];\n    zalgoGlobal.activeCount = zalgoGlobal.activeCount || 0;\n    zalgoGlobal.possiblyUnhandledPromiseHandlers = zalgoGlobal.possiblyUnhandledPromiseHandlers || [];\n    zalgoGlobal.dispatchedErrors = zalgoGlobal.dispatchedErrors || [];\n\n    return zalgoGlobal;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/global.js","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { getGlobal } from './global';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                this.reject(err);\n                return;\n            }\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) {\n        this.errorHandled = true;\n        this.reject(error);\n    }\n\n    // eslint-disable-next-line complexity\n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        getGlobal().activeCount += 1;\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        getGlobal().activeCount -= 1;\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            return ZalgoPromise.reject(err);\n        }\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        let promise = new ZalgoPromise();\n        getGlobal().flushPromises.push(promise);\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n\n        return promise;\n    }\n\n    static flushQueue() {\n        let promisesToFlush = getGlobal().flushPromises;\n        getGlobal().flushPromises = [];\n\n        for (let promise of promisesToFlush) {\n            promise.resolve();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/promise.js","/* @flow */\n\nimport { getGlobal } from './global';\nimport type { ZalgoPromise } from './promise';\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (getGlobal().dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    getGlobal().dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < getGlobal().possiblyUnhandledPromiseHandlers.length; j++) {\n        getGlobal().possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed) => void) : { cancel : () => void } {\n    getGlobal().possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            getGlobal().possiblyUnhandledPromiseHandlers.splice(getGlobal().possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/exceptions.js","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/index.js","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const WINDOW_PROP = {\n    POSTROBOT: ('__postRobot__' : '__postRobot__')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const PROTOCOL = {\n    MOCK: ('mock:' : 'mock:'),\n    FILE: ('file:' : 'file:')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/constants.js","/* @flow */\n\nimport { SEND_STRATEGY, PROTOCOL } from './constants';\n\nexport let CONFIG : Object = {\n\n    ALLOW_POSTMESSAGE_POPUP: ('__ALLOW_POSTMESSAGE_POPUP__' in window)\n        ? window.__ALLOW_POSTMESSAGE_POPUP__\n        : __POST_ROBOT__.__ALLOW_POSTMESSAGE_POPUP__,\n\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT:       2000,\n    ACK_TIMEOUT_KNOWN: 10000,\n    RES_TIMEOUT:       __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ SEND_STRATEGY.POST_MESSAGE ]: true,\n        [ SEND_STRATEGY.BRIDGE ]:       true,\n        [ SEND_STRATEGY.GLOBAL ]:       true\n    }\n};\n\nif (window.location.href.indexOf(PROTOCOL.FILE) === 0) {\n    CONFIG.ALLOW_POSTMESSAGE_POPUP = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/config.js","/* @flow */\n\nimport { WINDOW_PROP } from './conf';\n\nexport let global : Object = window[WINDOW_PROP.POSTROBOT] = window[WINDOW_PROP.POSTROBOT] || {};\n\n// Backwards compatibility\n\nglobal.registerSelf = () => {\n    // pass\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/global.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getAllWindows, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID, once, weakMapMemoizePromise } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { global } from '../global';\n\nglobal.instanceID = global.instanceID || uniqueID();\nglobal.helloPromises = global.helloPromises || new WeakMap();\nglobal.onHello = global.onHello || [];\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    return global.helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nconst listenForHello = once(() => {\n    global.on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return { instanceID: global.instanceID };\n    });\n});\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return global.send(win, MESSAGE_NAME.HELLO, { instanceID: global.instanceID }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport let getWindowInstanceID = weakMapMemoizePromise((win : CrossDomainWindowType) : ZalgoPromise<string> => {\n    return sayHello(win).then(({ instanceID }) => instanceID);\n});\n\nexport function initHello() {\n    listenForHello();\n\n    for (let win of getAllWindows()) {\n        if (win !== window) {\n            sayHello(win).catch(noop);\n        }\n    }\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/hello.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nglobal.knownWindows = global.knownWindows || new WeakMap();\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    global.knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    return global.knownWindows.get(win, false);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/windows.js","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/constants.js","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/common.js","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serialize.js","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/function.js","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/error.js","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/promise.js","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/regex.js","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/date.js","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/array.js","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/object.js","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/string.js","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/number.js","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/boolean.js","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/null.js","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/deserialize.js","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, getOrSet, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { global } from '../global';\nimport { getWindowInstanceID } from '../lib';\n\nglobal.winToProxyWindow = global.winToProxyWindow || new WeakMap();\nglobal.idToProxyWindow = global.idToProxyWindow || {};\n\ntype SerializedProxyWindow = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    id : string,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n\n    constructor(serializedWindow : SerializedProxyWindow, actualWindow? : CrossDomainWindowType) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        if (actualWindow) {\n            this.setWindow(actualWindow);\n        }\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.frameElement) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            } else {\n                return this.serializedWindow.focus();\n            }\n        }).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return isWindowClosed(this.actualWindow);\n            } else {\n                return this.serializedWindow.isClosed();\n            }\n        });\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win)\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                let match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win);\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow);\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow) : SerializedProxyWindow {\n        return ProxyWindow.toProxyWindow(win).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow) : ProxyWindow {\n        return getOrSet(global.idToProxyWindow, serializedWindow.id, () => {\n            return new ProxyWindow(serializedWindow);\n        });\n    }\n\n    static isProxyWindow(obj : mixed) : boolean {\n        return obj instanceof ProxyWindow;\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        return global.winToProxyWindow.getOrSet(win, () => {\n            let id = uniqueID();\n\n            global.idToProxyWindow[id] = new ProxyWindow({\n                id,\n                getInstanceID: () => getWindowInstanceID(win),\n                close:         () => ZalgoPromise.try(() => {\n                    win.close();\n                }),\n                focus:         () => ZalgoPromise.try(() => {\n                    win.focus();\n                }),\n                isClosed:      () => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    return isWindowClosed(win);\n                }),\n                setLocation:   (href) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    if (isSameDomain(win)) {\n                        try {\n                            if (win.location && typeof win.location.replace === 'function') {\n                                // $FlowFixMe\n                                win.location.replace(href);\n                                return;\n                            }\n                        } catch (err) {\n                            // pass\n                        }\n                    }\n    \n                    // $FlowFixMe\n                    win.location = href;\n                }),\n                setName:       (name) => ZalgoPromise.try(() => {\n                    // $FlowFixMe\n                    win.name = name;\n                })\n            // $FlowFixMe\n            }, win);\n\n            return global.idToProxyWindow[id];\n        });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : string | Array<string>, win : CrossDomainWindowType) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType, origin : string, win : SerializedProxyWindow) : ProxyWindow {\n    return ProxyWindow.deserialize(win);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serialize/window.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, uniqueID } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { global } from '../global';\n\nimport { ProxyWindow } from './window';\n\nglobal.methods = global.methods || new WeakMap();\nglobal.proxyWindowMethods = global.proxyWindowMethods || {};\nglobal.listeningForFunctions = global.listeningForFunctions || false;\n\nconst listenForFunctionCalls = once(() => {\n    if (global.listeningForFunctions) {\n        return;\n    }\n\n    global.listeningForFunctions = true;\n\n    global.on(MESSAGE_NAME.METHOD, { origin: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n        let { id, name } = data;\n        \n        return ZalgoPromise.try(() => {\n            let methods = global.methods.get(source) || {};\n            let meth = methods[data.id] || global.proxyWindowMethods[id];\n\n            if (!meth) {\n                throw new Error(`Could not find method with id: ${ data.id }`);\n            }\n\n            let { proxy, domain, val } = meth;\n\n            if (!matchDomain(domain, origin)) {\n                throw new Error(`Method domain ${ meth.domain } does not match origin ${ origin }`);\n            }\n            \n            if (proxy) {\n                return proxy.matchWindow(source).then(match => {\n                    if (!match) {\n                        throw new Error(`Proxy window does not match source`);\n                    }\n\n                    delete global.proxyWindowMethods[id];\n                    return val;\n                });\n            }\n\n            return val;\n\n        }).then(method => {\n            return method.apply({ source, origin, data }, data.args);\n\n        }).then(result => {\n            return { result, id, name };\n        });\n    });\n});\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : string | Array<string>, val : () => ZalgoPromise<T> | T, key : string) : SerializedFunction {\n    listenForFunctionCalls();\n    \n    let id = uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        global.proxyWindowMethods[id] = { proxy: destination, domain, val };\n    } else {\n        let methods = global.methods.getOrSet(destination, () => ({}));\n        methods[id] = { domain, val };\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name: val.name || key });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType, origin : string, { id, name } : { id : string, name : string }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n\n    function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        let args = Array.prototype.slice.call(arguments);\n        return global.send(source, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin })\n            .then(({ data }) => data.result);\n    }\n\n    crossDomainFunctionWrapper.fireAndForget = function crossDomainFireAndForgetFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        let args = Array.prototype.slice.call(arguments);\n        return global.send(source, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n    };\n\n    crossDomainFunctionWrapper.__name__ = name;\n    crossDomainFunctionWrapper.__xdomain__ = true;\n\n    crossDomainFunctionWrapper.source = source;\n    crossDomainFunctionWrapper.origin = origin;\n\n    return crossDomainFunctionWrapper;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serialize/function.js","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : string | Array<string>, obj : T) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType, origin : string, message : string) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow)\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serialize/serialize.js","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : string | Array<string>, val : Thenable, key : string) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key)\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serialize/promise.js","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, PROTOCOL, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : (string | Array<string>)) => {\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(window, win);\n        } catch (err) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[WINDOW_PROP.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/strategies.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { MESSAGE_TYPE, CONFIG, MESSAGE_NAME, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction logMessage(domain : string | Array<string>, message : Message) {\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_send', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', domain || WILDCARD, '\\n\\n', message);\n        }\n    }\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string | Array<string>, message : Message) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n\n        logMessage(domain, message);\n\n        const serializedMessage = serializeMessage(win, domain, {\n            [ WINDOW_PROP.POSTROBOT ]: {\n                id: uniqueID(),\n                ...message\n            }\n        });\n\n\n        let messages = [];\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/index.js","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { isRegex } from 'belter/src';\n\nimport { global } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    global.responseListeners = {};\n    global.requestListeners  = {};\n}\n\nglobal.responseListeners = global.responseListeners || {};\nglobal.requestListeners  = global.requestListeners  || {};\nglobal.WINDOW_WILDCARD   = global.WINDOW_WILDCARD   || new (function WindowWildcard() { /* pass */ })();\n\nglobal.erroredResponseListeners = global.erroredResponseListeners || {};\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : string | RegExp | Array<string>\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : (string | Array<string> | RegExp),\n    respond : (err : ?mixed, result : ?mixed) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    global.responseListeners[hash] = listener;\n}\n\nexport function getResponseListener(hash : string) : ResponseListenerType {\n    return global.responseListeners[hash];\n}\n\nexport function deleteResponseListener(hash : string) {\n    delete global.responseListeners[hash];\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    global.erroredResponseListeners[hash] = true;\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return Boolean(global.erroredResponseListeners[hash]);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    let nameListeners = global.requestListeners[name];\n\n    if (!nameListeners) {\n        return;\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n\n        let winListeners = winQualifier && nameListeners.get(winQualifier);\n\n        if (!winListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (winListeners[domain]) {\n                return winListeners[domain];\n            }\n\n            if (winListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of winListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (winListeners[WILDCARD]) {\n            return winListeners[WILDCARD];\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp | Array<string>) }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let requestListeners = global.requestListeners;\n\n    let nameListeners = requestListeners[name];\n\n    if (!nameListeners) {\n        nameListeners = new WeakMap();\n        requestListeners[name] = nameListeners;\n    }\n\n    let winListeners  = nameListeners.get(win);\n\n    if (!winListeners) {\n        winListeners = {};\n        nameListeners.set(win, winListeners);\n    }\n\n    let strDomain = domain.toString();\n\n    let regexListeners = winListeners[__DOMAIN_REGEX__];\n    let regexListener;\n\n    if (isRegex(domain)) {\n\n        if (!regexListeners) {\n            regexListeners = [];\n            winListeners[__DOMAIN_REGEX__] = regexListeners;\n        }\n\n        regexListener = { regex: domain, listener };\n\n        regexListeners.push(regexListener);\n\n    } else {\n        winListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            if (!winListeners) {\n                return;\n            }\n\n            delete winListeners[strDomain];\n\n            if (win && Object.keys(winListeners).length === 0) {\n                nameListeners.delete(win);\n            }\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n            }\n        }\n\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/listeners.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, data = {}) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            // $FlowFixMe\n            return sendMessage(source, origin, {\n                type,\n                hash:   message.hash,\n                name:   message.name,\n                ...data\n            });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.SUCCESS,\n                    data\n                });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.ERROR,\n                    error\n                });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            return options.respond(message.error, null);\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            let data = message.data;\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/types.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { MESSAGE_NAME, WINDOW_PROP, MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { global } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nglobal.receivedMessages = global.receivedMessages || [];\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[WINDOW_PROP.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    let message = parseMessage(data, source, origin);\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n    \n    if (global.receivedMessages.indexOf(message.id) === -1) {\n        global.receivedMessages.push(message.id);\n    } else {\n        return;\n    }\n\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_receive', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', origin, '\\n\\n', message);\n        }\n    }\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(messageEvent.source, window);\n        } catch (err) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    // $FlowFixMe\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/index.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex } from 'belter/src';\n\n\nimport { CONFIG, MESSAGE_TYPE, WILDCARD } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { global } from '../global';\n\nglobal.requestPromises = global.requestPromises || new WeakMap();\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?(string | Array<string> | RegExp),\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : string | Array<string> | RegExp;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let requestPromises = global.requestPromises.get(win);\n\n        if (!requestPromises) {\n            requestPromises = [];\n            global.requestPromises.set(win, requestPromises);\n        }\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                requestPromises.splice(requestPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                sendMessage(win, actualDomain, {\n                    type:          MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: Boolean(options.fireAndForget)\n                }).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let totalAckTimeout = isWindowKnown(win) ? CONFIG.ACK_TIMEOUT_KNOWN : CONFIG.ACK_TIMEOUT;\n                let totalResTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let ackTimeout = totalAckTimeout;\n                let resTimeout = totalResTimeout;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        requestPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/client.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once as onceFunction, safeInterval } from 'belter/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?(string | RegExp | Array<string>),\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/server.js","/* @flow */\n\nimport { WINDOW_PROP } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG } from '../conf';\n\nexport function disable() {\n    delete window[WINDOW_PROP.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/config.js","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/index.js","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { global } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n\n    // global.tunnelWindows\n    // global.bridges\n    // global.popupWindowsByName\n    // global.responseListeners\n    // global.requestListeners\n\n    let requestPromises = global.requestPromises.get(win);\n\n    if (requestPromises) {\n        for (let promise of requestPromises) {\n            promise.reject(new Error(`No response from window - cleaned up`));\n        }\n    }\n\n    if (global.popupWindowsByWin) {\n        global.popupWindowsByWin.delete(win);\n    }\n\n    if (global.remoteWindows) {\n        global.remoteWindows.delete(win);\n    }\n\n    global.requestPromises.delete(win);\n    global.methods.delete(win);\n    global.helloPromises.delete(win);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clean.js","/* @flow */\n\nimport { initHello } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\n\nexport * from './public';\nexport { markWindowKnown } from './lib';\nexport { serializeMessage, deserializeMessage, ProxyWindow } from './serialize';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nif (!global.initialized) {\n    global.initialized = true;\n\n    listenForMessages();\n\n    if (bridge) {\n        bridge.openTunnelToOpener();\n    }\n\n    initHello();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interface.js","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}