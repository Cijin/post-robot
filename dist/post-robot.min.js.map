{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 382229b39f81089c763c","webpack:///./node_modules/cross-domain-utils/src/index.js","webpack:///./node_modules/zalgo-promise/src/utils.js","webpack:///./node_modules/zalgo-promise/src/global.js","webpack:///./node_modules/zalgo-promise/src/promise.js","webpack:///./node_modules/zalgo-promise/src/exceptions.js","webpack:///./node_modules/zalgo-promise/src/index.js","webpack:///./node_modules/belter/src/index.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/util.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack:///./node_modules/cross-domain-safe-weakmap/src/native.js","webpack:///./node_modules/belter/src/util.js","webpack:///./node_modules/cross-domain-utils/src/constants.js","webpack:///./node_modules/belter/src/device.js","webpack:///./node_modules/belter/src/dom.js","webpack:///./node_modules/belter/src/storage.js","webpack:///./src/conf/constants.js","webpack:///./src/conf/config.js","webpack:///./src/global.js","webpack:///./src/lib/hello.js","webpack:///./src/lib/windows.js","webpack:///./node_modules/universal-serialize/src/constants.js","webpack:///./node_modules/universal-serialize/src/common.js","webpack:///./node_modules/universal-serialize/src/serialize.js","webpack:///./node_modules/universal-serialize/src/serializers/function.js","webpack:///./node_modules/universal-serialize/src/serializers/error.js","webpack:///./node_modules/universal-serialize/src/serializers/promise.js","webpack:///./node_modules/universal-serialize/src/serializers/regex.js","webpack:///./node_modules/universal-serialize/src/serializers/date.js","webpack:///./node_modules/universal-serialize/src/serializers/array.js","webpack:///./node_modules/universal-serialize/src/serializers/object.js","webpack:///./node_modules/universal-serialize/src/serializers/string.js","webpack:///./node_modules/universal-serialize/src/serializers/number.js","webpack:///./node_modules/universal-serialize/src/serializers/boolean.js","webpack:///./node_modules/universal-serialize/src/serializers/null.js","webpack:///./node_modules/universal-serialize/src/deserialize.js","webpack:///./src/serialize/function.js","webpack:///./src/serialize/window.js","webpack:///./src/serialize/serialize.js","webpack:///./src/serialize/promise.js","webpack:///./src/drivers/send/strategies.js","webpack:///./src/drivers/send/index.js","webpack:///./src/drivers/listeners.js","webpack:///./src/drivers/receive/types.js","webpack:///./src/drivers/receive/index.js","webpack:///./src/public/client.js","webpack:///./src/public/server.js","webpack:///./src/public/config.js","webpack:///./src/public/index.js","webpack:///./src/clean.js","webpack:///./src/interface.js","webpack:///./src/index.js","webpack:///./node_modules/cross-domain-utils/src/util.js","webpack:///./node_modules/cross-domain-utils/src/utils.js","webpack:///./node_modules/belter/src/experiment.js","webpack:///./node_modules/belter/src/global.js","webpack:///./node_modules/belter/src/http.js","webpack:///./node_modules/belter/src/decorators.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_IMPORTED_MODULE_0__utils__","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_1__types__","isPromise","item","Promise","window","Window","constructor","toString","then","err","getGlobal","glob","global","TypeError","zalgoGlobal","__zalgopromise__","flushPromises","activeCount","possiblyUnhandledPromiseHandlers","dispatchedErrors","ZalgoPromise","handler","_this","_classCallCheck","resolved","rejected","errorHandled","handlers","result","error","isAsync","res","resolve","reject","Error","value","dispatch","_this2","setTimeout","promise","indexOf","push","j","length","dispatchPossiblyUnhandledError","asyncReject","_this3","dispatching","_loop","_handlers$i","onSuccess","onError","flushQueue","undefined","onFinally","timeout","time","_this4","clearTimeout","toPromise","all","promises","count","results","_loop2","prom","hash","keys","map","key","items","method","onPossiblyUnhandledException","cancel","splice","context","args","apply","delay","flush","promisesToFlush","_i2","_length2","promise_ZalgoPromise","__WEBPACK_IMPORTED_MODULE_1__dom__","__WEBPACK_IMPORTED_MODULE_5__util__","__WEBPACK_IMPORTED_MODULE_7__types__","safeIndexOf","collection","counter","Date","now","CrossDomainSafeWeakMap","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","weakmap","values","_cleanupClosedWindows","isWindow","isWindowClosed","isSafeToReadWrite","entry","writable","index","has","getOrSet","__GLOBAL__","options","arguments","cacheMap","memoizedFunction","_len","Array","_key","cache","thisNamespace","serializeArgs","cacheTime","reset","displayName","memoizedPromiseFunction","_len2","_key2","promisifiedFunction","logic","__inline_memoize_cache__","called","stringifyError","level","stack","message","newErr","obj","source","assign","loop","string","charAt","toUpperCase","slice","toLowerCase","_arguments2","val","uniqueID","str","chars","replace","floor","toISOString","btoa","objectIDs","JSON","stringify","subkey","_typeof","uid","getObjectID","weakMapMemoizePromise","arg","_this5","PROTOCOL","WILDCARD","MOCK","FILE","ABOUT","navigator","mockUserAgent","userAgent","match","isLocalStorageEnabled","inlineMemoize","localStorage","setItem","getItem","removeItem","event","addEventListener","removeEventListener","create","getStorage","_ref","_ref$version","version","_ref$lifetime","lifetime","STORAGE_KEY","accessedStorage","getState","localStorageEnabled","storage","rawStorage","parse","id","getSession","session","__session__","created","guid","getID","getSessionState","state","getSessionID","__WEBPACK_IMPORTED_MODULE_0__util__","MESSAGE_TYPE","REQUEST","RESPONSE","ACK","MESSAGE_NAME","METHOD","HELLO","OPEN_TUNNEL","WINDOW_PROP","POSTROBOT","SERIALIZATION_TYPE","CROSS_DOMAIN_ZALGO_PROMISE","CROSS_DOMAIN_FUNCTION","CROSS_DOMAIN_WINDOW","CONFIG","ALLOW_POSTMESSAGE_POPUP","__ALLOW_POSTMESSAGE_POPUP__","BRIDGE_TIMEOUT","CHILD_WINDOW_TIMEOUT","ACK_TIMEOUT","ACK_TIMEOUT_KNOWN","RES_TIMEOUT","ALLOWED_POST_MESSAGE_METHODS","_ALLOWED_POST_MESSAGE","location","href","getHelloPromise","win","helloPromises","registerSelf","instanceID","listenForHello","once","on","domain","origin","sayHello","send","_ref2","data","getWindowInstanceID","_ref3","markWindowKnown","knownWindows","filter","knownWindow","_global$onKnownWindow2","onKnownWindow","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","__type__","determineType","isArray","serializeType","type","__val__","SERIALIZER","_SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","_DESERIALIZER","RegExp","defaultDeserializers","methods","listenForFunctionCalls","meth","matchDomain","serializeFunction","destination","ProxyWindow","serializedWindow","actualWindowPromise","getInstanceID","memoizePromise","waitForWindows","_i4","_global$knownWindows2","_length4","matchWindow","setWindow","noop","setLocation","actualWindow","setName","isSameDomain","frameElement","setAttribute","close","focus","_this6","hasWindow","Boolean","awaitWindow","getSerializedID","serializedID","serialize","isProxyWindow","deserialize","toProxyWindow","proxyWin","serializeMessage","_serialize","serializers","serializer","serializePromise","serializedWindows","deserializeMessage","_deserialize","deserializers","deserializer","serializedPromise","serializedFunction","crossDomainFunctionWrapper","__name__","__xdomain__","deserializeFunction","deseserializedWindows","SEND_MESSAGE_STRATEGIES","serializedMessage","dom","protocol","isActuallySameDomain","getActualDomain","forEach","postMessage","sendMessage","_serializeMessage","_extends","messages","strategyName","success","some","status","join","responseListeners","requestListeners","WINDOW_WILDCARD","erroredResponseListeners","__DOMAIN_REGEX__","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","nameListeners","winQualifier","winListeners","_winListeners$__DOMAI2","_ref5","regex","listener","RECEIVE_MESSAGE_TYPES","sendResponse","fireAndForget","types__extends","host","pathname","ack","handleError","_RECEIVE_MESSAGE_TYPE","stringifyDomainPattern","respond","receiveMessage","closed","parsedMessage","receive__typeof","parseMessage","receivedMessages","messageListener","sourceElement","originalEvent","request","targetWindow","el","document","getElementById","tagName","contentWindow","HTMLIFrameElement","hasResult","requestPromises","requestPromise","isAncestor","awaitWindowHello","isRegex","actualDomain","responseListener","addResponseListener","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cycleTime","cycle","max","min","getDomain","markResponseListenerErrored","sendToParent","getAncestor","client","listen","listenerOptions","errorHandler","requestListener","addRequestListener","_ref6","listenersCollection","_i6","_win2","_length6","_i8","_length8","_i10","_domain2","_length10","_i12","_length12","existingListener","strDomain","regexListeners","regexListener","onceFunction","errorOnClose","interval","safeInterval","server__typeof","onceListener","disable","parent","cleanUpWindow","popupWindowsByWin","remoteWindows","bridge","initialized","openTunnelToOpener","_getAllWindows2","getAllWindows","initHello","INTERFACE","frames","top","getTop","concat","getAllChildFrames","getAllFramesInWindow","opener","getOpener","getNextOpener","frame","iframeFrames","isFrameWindowClosed","iframeWindows","cleanIframes","child","actualParent","_i16","_getFrames8","getFrames","_length14","pattern","subpattern","IE_WIN_ACCESS_ERROR","__cross_domain_utils_window_check__","isAboutProtocol","getParent","canReadFromWindow","mockDomain","desc","getOwnPropertyDescriptor","isAncestorParent","childParent","getParents","len","_i3","_getFrames2","_i5","_getAllChildFrames2","childFrame","_i7","_getAllChildFrames4","parentNode","doc","ownerDocument","documentElement","contains","allowMock","mockclosed","iframeIndex"],"mappings":"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","file":"post-robot.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"postRobot\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"postRobot\"] = factory();\n\telse\n\t\troot[\"postRobot\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 382229b39f81089c763c","/* @flow */\n\nexport * from './utils';\nexport * from './types';\nexport * from './constants';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/index.js","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && window.Window && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && window.constructor && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/utils.js","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\ntype ZalgoGlobalType = {\n    flushPromises : Array<ZalgoPromise<mixed>>,\n    activeCount : number,\n    possiblyUnhandledPromiseHandlers : Array<<T>(mixed, ZalgoPromise<T>) => void>, // eslint-disable-line no-undef\n    dispatchedErrors : Array<mixed>\n};\n\nexport function getGlobal() : ZalgoGlobalType {\n\n    let glob;\n\n    if (typeof window !== 'undefined') {\n        glob = window;\n    } else if (typeof global !== 'undefined') {\n        glob = global;\n    } else {\n        throw new TypeError(`Can not find global`);\n    }\n\n    let zalgoGlobal = glob.__zalgopromise__ = glob.__zalgopromise__ || {};\n    zalgoGlobal.flushPromises = zalgoGlobal.flushPromises || [];\n    zalgoGlobal.activeCount = zalgoGlobal.activeCount || 0;\n    zalgoGlobal.possiblyUnhandledPromiseHandlers = zalgoGlobal.possiblyUnhandledPromiseHandlers || [];\n    zalgoGlobal.dispatchedErrors = zalgoGlobal.dispatchedErrors || [];\n\n    return zalgoGlobal;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/global.js","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { getGlobal } from './global';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                this.reject(err);\n                return;\n            }\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) {\n        this.errorHandled = true;\n        this.reject(error);\n    }\n\n    // eslint-disable-next-line complexity\n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        getGlobal().activeCount += 1;\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    result.then(res => {\n                        promise.resolve(res);\n                    }, err => {\n                        promise.reject(err);\n                    });\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        getGlobal().activeCount -= 1;\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static all<X : [*] | [*, *] | [*, *, *] | [*, *, *, *] | [*, *, *, *, *] | [*, *, *, *, *, *] | [*, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *] | [*, *, *, *, *, *, *, *, *] | Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            ZalgoPromise.resolve(prom).then(result => {\n                results[i] = result;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                promise.reject(err);\n            });\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : { [string] : * }>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            return ZalgoPromise.reject(err);\n        }\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        let promise = new ZalgoPromise();\n        getGlobal().flushPromises.push(promise);\n\n        if (getGlobal().activeCount === 0) {\n            ZalgoPromise.flushQueue();\n        }\n\n        return promise;\n    }\n\n    static flushQueue() {\n        let promisesToFlush = getGlobal().flushPromises;\n        getGlobal().flushPromises = [];\n\n        for (let promise of promisesToFlush) {\n            promise.resolve();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/promise.js","/* @flow */\n\nimport { getGlobal } from './global';\nimport type { ZalgoPromise } from './promise';\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (getGlobal().dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    getGlobal().dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < getGlobal().possiblyUnhandledPromiseHandlers.length; j++) {\n        getGlobal().possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed) => void) : { cancel : () => void } {\n    getGlobal().possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            getGlobal().possiblyUnhandledPromiseHandlers.splice(getGlobal().possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/exceptions.js","/* @flow */\n\nexport { ZalgoPromise } from './promise';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/zalgo-promise/src/index.js","/* @flow */\n\nexport * from './device';\nexport * from './dom';\nexport * from './experiment';\nexport * from './global';\nexport * from './storage';\nexport * from './util';\nexport * from './http';\nexport * from './types';\nexport * from './decorators';\nexport * from './css';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/index.js","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/util.js","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nlet defineProperty = Object.defineProperty;\nlet counter = Date.now() % 1e9;\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        counter += 1;\n\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__${ counter }`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let values = this.values;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n\n        } else {\n\n            let name = this.name;\n            let entry = key[name];\n\n            if (entry && entry[0] === key) {\n                entry[1] = value;\n            } else {\n                defineProperty(key, name, {\n                    value:    [ key, value ],\n                    writable: true\n                });\n            }\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index === -1) {\n                return;\n            }\n\n            return this.values[index];\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return entry[1];\n            }\n        }\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let keys = this.keys;\n            let index = safeIndexOf(keys, key);\n\n            if (index !== -1) {\n                keys.splice(index, 1);\n                this.values.splice(index, 1);\n            }\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                entry[0] = entry[1] = undefined;\n            }\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                return weakmap.has(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (!this.isSafeToReadWrite(key)) {\n\n            this._cleanupClosedWindows();\n\n            let index = safeIndexOf(this.keys, key);\n            return index !== -1;\n\n        } else {\n\n            let entry = key[this.name];\n\n            if (entry && entry[0] === key) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/weakmap.js","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-safe-weakmap/src/native.js","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function base64encode(str : string) : string {\n    if (typeof __WEB__ === 'undefined' || !__WEB__) {\n        return require('Base64').btoa(str);\n    }\n    return window.btoa(str);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof __WEB__ === 'undefined' || !__WEB__) {\n        return require('Base64').atob(str);\n    }\n    return window.atob(str);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs(args : Array<mixed>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoize<R>(method : (...args : Array<any>) => R, options : { time? : number, name? : string, thisNamespace? : boolean } = {}) : ((...args : Array<any>) => R) {\n    let cacheMap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedFunction(...args : Array<any>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    }\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    if (options.name) {\n        memoizedFunction.displayName = `${ options.name }:memoized`;\n    }\n\n    return memoizedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = method.apply(this, arguments)\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return memoizedPromiseFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return promisifiedFunction;\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    return function onceFunction() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (typeof err.toString === 'function') {\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && typeof item.toString === 'function') {\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    return function promiseDebouncedMethod() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string) => void,\n    triggerOnce : (eventName : string) => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string) {\n\n            let handlerList = handlers[eventName];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    handler();\n                }\n            }\n        },\n\n        triggerOnce(eventName : string) {\n\n            if (triggered[eventName]) {\n                return;\n            }\n\n            triggered[eventName] = true;\n            this.trigger(eventName);\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Object | Array<mixed>> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    return function debounceWrapper() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/util.js","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/constants.js","/* @flow */\n\nexport function getUserAgent() : string {\n    return window.navigator.mockUserAgent || window.navigator.userAgent;\n}\n\nexport function isDevice() : boolean {\n    let userAgent = getUserAgent();\n    if (userAgent.match(/Android|webOS|iPhone|iPad|iPod|bada|Symbian|Palm|CriOS|BlackBerry|IEMobile|WindowsMobile|Opera Mini/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isWebView() : boolean {\n    let userAgent = getUserAgent();\n    return (/(iPhone|iPod|iPad|Macintosh).*AppleWebKit(?!.*Safari)/i).test(userAgent) ||\n        (/\\bwv\\b/).test(userAgent) ||\n    (/Android.*Version\\/(\\d)\\.(\\d)/i).test(userAgent);\n}\n\nexport function isStandAlone() : boolean {\n    return (window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches);\n}\n\nexport function isFacebookWebView(ua? : string = getUserAgent()) : boolean {\n    return (ua.indexOf('FBAN') !== -1) || (ua.indexOf('FBAV') !== -1);\n}\n\nexport function isFirefoxIOS(ua? : string = getUserAgent()) : boolean {\n    return (/FxiOS/i).test(ua);\n}\n\nexport function isEdgeIOS(ua? : string = getUserAgent()) : boolean {\n    return (/EdgiOS/i).test(ua);\n}\n\nexport function isOperaMini(ua? : string = getUserAgent()) : boolean {\n    return ua.indexOf('Opera Mini') > -1;\n}\n\nexport function isAndroid(ua? : string = getUserAgent()) : boolean {\n    return (/Android/).test(ua);\n}\n\nexport function isIos(ua? : string = getUserAgent()) : boolean {\n    return (/iPhone|iPod|iPad/).test(ua);\n}\n\nexport function isGoogleSearchApp(ua? : string = getUserAgent()) : boolean {\n    return (/\\bGSA\\b/).test(ua);\n}\n\nexport function isQQBrowser(ua? : string = getUserAgent()) : boolean {\n    return (/QQBrowser/).test(ua);\n}\n\nexport function isIosWebview(ua? : string = getUserAgent()) : boolean {\n    if (isIos(ua)) {\n        if (isGoogleSearchApp(ua)) {\n            return true;\n        }\n        return (/.+AppleWebKit(?!.*Safari)/).test(ua);\n    }\n    return false;\n}\n\nexport function isAndroidWebview(ua? : string = getUserAgent()) : boolean {\n    if (isAndroid(ua)) {\n        return (/Version\\/[\\d.]+/).test(ua) && !isOperaMini(ua);\n    }\n    return false;\n}\n\nexport function isIE() : boolean {\n\n    if (window.document.documentMode) {\n        return true;\n    }\n\n    return Boolean(\n        window.navigator &&\n        window.navigator.userAgent &&\n        (/Edge|MSIE/i).test(window.navigator.userAgent)\n    );\n}\n\nexport function isIECompHeader() : boolean {\n    let mHttp = window.document.querySelector('meta[http-equiv=\"X-UA-Compatible\"]');\n    let mContent = window.document.querySelector('meta[content=\"IE=edge\"]');\n    if (mHttp && mContent) {\n        return true;\n    }\n    return false;\n}\n\nexport function isElectron() : boolean {\n    if (typeof process !== 'undefined' && process.versions && process.versions.electron) {\n        return true;\n    }\n    return false;\n}\n\nexport function isIEIntranet() : boolean {\n\n    // This status check only works for older versions of IE with document.documentMode set\n\n    if (window.document.documentMode) {\n        try {\n            let status = window.status;\n\n            window.status = 'testIntranetMode';\n\n            if (window.status === 'testIntranetMode') {\n                window.status = status;\n\n                return true;\n            }\n\n            return false;\n\n        } catch (err) {\n\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isMacOsCna() : boolean {\n    let userAgent = getUserAgent();\n    return (/Macintosh.*AppleWebKit(?!.*Safari)/i).test(userAgent);\n}\n\nexport function supportsPopups(ua? : string = getUserAgent()) : boolean {\n    return !(isIosWebview(ua) || isAndroidWebview(ua) || isOperaMini(ua) ||\n        isFirefoxIOS(ua) || isEdgeIOS(ua) || isFacebookWebView(ua) || isQQBrowser(ua) || isElectron() || isMacOsCna() || isStandAlone());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/device.js","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, debounce, safeInterval } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady.then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<Element> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : Element, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        let element = document.getElementById(id);\n\n        if (element) {\n            return element;\n        }\n\n        if (document.querySelector) {\n            element = document.querySelector(id);\n        }\n\n        if (element) {\n            return element;\n        }\n    }\n}\n\nexport function getElement(id : ElementRefType) : HTMLElement {\n\n    let element = getElementSafe(id);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<window.HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\nexport function popup(url : string, options : { [ string ] : mixed }) : CrossDomainWindowType {\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map((key) => {\n        if (options[key]) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, options.name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    while (documentElement.children && documentElement.children.length) {\n        documentElement.removeChild(documentElement.children[0]);\n    }\n\n    while (el.children.length) {\n        documentElement.appendChild(el.children[0]);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n\n    if (frame.contentWindow) {\n        return ZalgoPromise.resolve(frame.contentWindow);\n    }\n\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : HTMLElement) : HTMLIFrameElement {\n\n    let el = getElement(container);\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            frameBorder:       '0',\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    el.appendChild(frame);\n\n    if (options.url || window.navigator.userAgent.match(/MSIE|Edge/i)) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function elementStoppedMoving(element : ElementRefType, timeout : number = 5000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n        let el = getElement(element);\n\n        let start = el.getBoundingClientRect();\n\n        let interval;\n        let timer;\n\n        interval = setInterval(() => {\n            let end = el.getBoundingClientRect();\n\n            if (start.top === end.top && start.bottom === end.bottom && start.left === end.left && start.right === end.right && start.width === end.width && start.height === end.height) {\n                clearTimeout(timer);\n                clearInterval(interval);\n                return resolve();\n            }\n\n            start = end;\n\n        }, 50);\n\n        timer = setTimeout(() => {\n            clearInterval(interval);\n            reject(new Error(`Timed out waiting for element to stop animating after ${ timeout }ms`));\n        }, timeout);\n    });\n}\n\nexport function getCurrentDimensions(el : HTMLElement) : { width : number, height : number } {\n    return {\n        width:  el.offsetWidth,\n        height: el.offsetHeight\n    };\n}\n\nexport function setOverflow(el : HTMLElement, value : string = 'auto') : { reset : () => void } {\n\n    let { overflow, overflowX, overflowY } = el.style;\n\n    el.style.overflow = el.style.overflowX = el.style.overflowY = value;\n\n    return {\n        reset() {\n            el.style.overflow = overflow;\n            el.style.overflowX = overflowX;\n            el.style.overflowY = overflowY;\n        }\n    };\n}\n\nfunction dimensionsDiff(one : { width : number, height : number }, two : { width : number, height : number }, { width = true, height = true, threshold = 0 } : { width : boolean, height : boolean, threshold : number }) : boolean {\n\n    if (width && Math.abs(one.width - two.width) > threshold) {\n        return true;\n    }\n\n    if (height && Math.abs(one.height - two.height) > threshold) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trackDimensions(el : HTMLElement, { width = true, height = true, threshold = 0 } : { width : boolean, height : boolean, threshold : number }) : { check : () => { changed : boolean, dimensions : { width : number, height : number } }, reset : () => void } {\n\n    let currentDimensions = getCurrentDimensions(el);\n\n    return {\n        check() : { changed : boolean, dimensions : { width : number, height : number } } {\n            let newDimensions = getCurrentDimensions(el);\n\n            return {\n                changed:    dimensionsDiff(currentDimensions, newDimensions, { width, height, threshold }),\n                dimensions: newDimensions\n            };\n        },\n\n        reset() {\n            currentDimensions = getCurrentDimensions(el);\n        }\n    };\n}\n\nexport function onDimensionsChange(el : HTMLElement, { width = true, height = true, delay = 50, threshold = 0 } : { width? : boolean, height? : boolean, delay? : number, threshold? : number }) : ZalgoPromise<{ width : number, height : number }> {\n\n    return new ZalgoPromise(resolve => {\n\n        let tracker = trackDimensions(el, { width, height, threshold });\n\n        let interval;\n\n        let resolver = debounce((dimensions) => {\n            clearInterval(interval);\n            return resolve(dimensions);\n        }, delay * 4);\n\n        interval = setInterval(() => {\n            let { changed, dimensions } = tracker.check();\n            if (changed) {\n                tracker.reset();\n                return resolver(dimensions);\n            }\n        }, delay);\n\n        function onWindowResize() {\n            let { changed, dimensions } = tracker.check();\n            if (changed) {\n                tracker.reset();\n                window.removeEventListener('resize', onWindowResize);\n                resolver(dimensions);\n            }\n        }\n\n        window.addEventListener('resize', onWindowResize);\n    });\n}\n\nexport function dimensionsMatchViewport(el : HTMLElement, { width, height } : { width : number, height : number }) : boolean {\n\n    let dimensions = getCurrentDimensions(el);\n\n    if (width && dimensions.width !== window.innerWidth) {\n        return false;\n    }\n\n    if (height && dimensions.height !== window.innerHeight) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nfunction isValidAnimation(element : HTMLElement, name : string) : boolean {\n\n    let CSSRule = window.CSSRule;\n\n    const KEYFRAMES_RULE = CSSRule.KEYFRAMES_RULE || CSSRule.WEBKIT_KEYFRAMES_RULE || CSSRule.MOZ_KEYFRAMES_RULE ||\n        CSSRule.O_KEYFRAMES_RULE || CSSRule.MS_KEYFRAMES_RULE;\n\n    let stylesheets = element.ownerDocument.styleSheets;\n\n    try {\n        for (let i = 0; i < stylesheets.length; i++) {\n\n            // $FlowFixMe\n            let cssRules = stylesheets[i].cssRules;\n\n            if (!cssRules) {\n                continue;\n            }\n\n            for (let j = 0; j < cssRules.length; j++) {\n\n                let cssRule = cssRules[j];\n\n                if (!cssRule) {\n                    continue;\n                }\n\n                if (cssRule.type === KEYFRAMES_RULE && cssRule.name === name) {\n                    return true;\n                }\n            }\n        }\n    } catch (err) {\n\n        return false;\n    }\n\n\n    return false;\n}\n\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el || !isValidAnimation(el, name)) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            setVendorCSS(el, 'animationName', '');\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    if (element.classList) {\n        element.classList.add(name);\n    } else if (element.className.split(/\\s+/).indexOf(name) === -1) {\n        element.className += ` ${ name }`;\n    }\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    if (element.classList) {\n        element.classList.remove(name);\n    } else if (element.className.split(/\\s+/).indexOf(name) !== -1) {\n        element.className = element.className.replace(name, '');\n    }\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/dom.js","/* @flow */\n\nimport { uniqueID, getGlobal, inlineMemoize } from './util';\nimport { isLocalStorageEnabled } from './dom';\n\ntype Getter<T> = <T>(handler : (Object) => T) => T;\n\nexport type Storage = {\n    getState : Getter<*>,\n    getID : () => string,\n    getSessionState : Getter<*>,\n    getSessionID : () => string\n};\n\nexport function getStorage({ name, version = 'latest', lifetime = (5 * 60 * 1000) } : { name : string, version? : string, lifetime? : number }) : Storage {\n    return inlineMemoize(getStorage, () => {\n        const STORAGE_KEY = `__${ name }_${ version }_storage__`;\n\n        let accessedStorage;\n\n        function getState<T>(handler : (storage : Object) => T) : T {\n\n            let localStorageEnabled = isLocalStorageEnabled();\n            let storage;\n\n            if (accessedStorage) {\n                storage = accessedStorage;\n            }\n\n            if (!storage && localStorageEnabled) {\n                let rawStorage = window.localStorage.getItem(STORAGE_KEY);\n\n                if (rawStorage) {\n                    storage = JSON.parse(rawStorage);\n                }\n            }\n\n            if (!storage) {\n                storage = getGlobal()[STORAGE_KEY];\n            }\n\n            if (!storage) {\n                storage = {\n                    id: uniqueID()\n                };\n            }\n\n            if (!storage.id) {\n                storage.id = uniqueID();\n            }\n\n            accessedStorage = storage;\n\n            let result = handler(storage);\n\n            if (localStorageEnabled) {\n                window.localStorage.setItem(STORAGE_KEY, JSON.stringify(storage));\n            } else {\n                getGlobal()[STORAGE_KEY] = storage;\n            }\n\n            accessedStorage = null;\n\n            return result;\n        }\n\n        function getID() : string {\n            return getState(storage => storage.id);\n        }\n\n        function getSession<T>(handler : (state : Object) => T) : T {\n            return getState(storage => {\n\n                let session = storage.__session__;\n                let now = Date.now();\n\n                if (session && ((now - session.created) > lifetime)) {\n                    session = null;\n                }\n\n                if (!session) {\n                    session = {\n                        guid:    uniqueID(),\n                        created: now\n                    };\n                }\n\n                storage.__session__ = session;\n\n                return handler(session);\n            });\n        }\n\n        function getSessionState<T>(handler : (state : Object) => T) : T {\n            return getSession(session => {\n                session.state = session.state || {};\n                return handler(session.state);\n            });\n        }\n\n        function getSessionID() : string {\n            return getSession(session => session.guid);\n        }\n\n        return {\n            getState,\n            getID,\n            getSessionState,\n            getSessionID\n        };\n    }, [ { name, version, lifetime } ]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/storage.js","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const WINDOW_PROP = {\n    POSTROBOT: ('__postRobot__' : '__postRobot__')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const PROTOCOL = {\n    MOCK: ('mock:' : 'mock:'),\n    FILE: ('file:' : 'file:')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/constants.js","/* @flow */\n\nimport { SEND_STRATEGY, PROTOCOL } from './constants';\n\nexport let CONFIG : Object = {\n\n    ALLOW_POSTMESSAGE_POPUP: ('__ALLOW_POSTMESSAGE_POPUP__' in window)\n        ? window.__ALLOW_POSTMESSAGE_POPUP__\n        : __POST_ROBOT__.__ALLOW_POSTMESSAGE_POPUP__,\n\n    BRIDGE_TIMEOUT:       5000,\n    CHILD_WINDOW_TIMEOUT: 5000,\n\n    ACK_TIMEOUT:       2000,\n    ACK_TIMEOUT_KNOWN: 10000,\n    RES_TIMEOUT:       __TEST__ ? 2000 : -1,\n    \n    ALLOWED_POST_MESSAGE_METHODS: {\n        [ SEND_STRATEGY.POST_MESSAGE ]: true,\n        [ SEND_STRATEGY.BRIDGE ]:       true,\n        [ SEND_STRATEGY.GLOBAL ]:       true\n    }\n};\n\nif (window.location.href.indexOf(PROTOCOL.FILE) === 0) {\n    CONFIG.ALLOW_POSTMESSAGE_POPUP = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/conf/config.js","/* @flow */\n\nimport { WINDOW_PROP } from './conf';\n\nexport let global : Object = window[WINDOW_PROP.POSTROBOT] = window[WINDOW_PROP.POSTROBOT] || {};\n\n// Backwards compatibility\n\nglobal.registerSelf = () => {\n    // pass\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/global.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getAllWindows, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID, once, weakMapMemoizePromise } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { global } from '../global';\n\nglobal.instanceID = global.instanceID || uniqueID();\nglobal.helloPromises = global.helloPromises || new WeakMap();\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    return global.helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nconst listenForHello = once(() => {\n    global.on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        getHelloPromise(source).resolve({ win: source, domain: origin });\n        return {\n            instanceID: global.instanceID\n        };\n    });\n});\n\nexport function sayHello(win : CrossDomainWindowType) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return global.send(win, MESSAGE_NAME.HELLO, {}, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            getHelloPromise(win).resolve({ win, domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport let getWindowInstanceID = weakMapMemoizePromise((win : CrossDomainWindowType) : ZalgoPromise<string> => {\n    return sayHello(win).then(({ instanceID }) => instanceID);\n});\n\nexport function initHello() {\n    listenForHello();\n\n    for (let win of getAllWindows()) {\n        if (win !== window) {\n            sayHello(win).catch(noop);\n        }\n    }\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ win : CrossDomainWindowType, domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/hello.js","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\n\nglobal.knownWindows = global.knownWindows || [];\nglobal.onKnownWindow = global.onKnownWindow || [];\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    global.knownWindows = global.knownWindows.filter(knownWindow => !isWindowClosed(knownWindow));\n    if (global.knownWindows.indexOf(win) === -1) {\n        global.knownWindows.push(win);\n        for (let handler of global.onKnownWindow) {\n            handler(win);\n        }\n    }\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    return global.knownWindows.indexOf(win) !== -1;\n}\n\nexport function getKnownWindows() : $ReadOnlyArray<CrossDomainWindowType> {\n    return global.knownWindows;\n}\n\nexport function onKnownWindow(handler : (CrossDomainWindowType) => void) {\n    global.onKnownWindow.push(handler);\n    for (let win of global.knownWindows) {\n        handler(win);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/windows.js","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/constants.js","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/common.js","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serialize.js","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/function.js","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/error.js","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/promise.js","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/regex.js","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/date.js","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/array.js","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/object.js","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/string.js","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/number.js","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/boolean.js","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/serializers/null.js","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/universal-serialize/src/deserialize.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, uniqueID } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { global } from '../global';\n\nglobal.methods = global.methods || new WeakMap();\n\nconst listenForFunctionCalls = once(() => {\n    global.on(MESSAGE_NAME.METHOD, { origin: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n        let methods = global.methods.get(source);\n\n        if (!methods) {\n            throw new Error(`Could not find any methods this window has privileges to call`);\n        }\n\n        let meth = methods[data.id];\n\n        if (!meth) {\n            throw new Error(`Could not find method with id: ${ data.id }`);\n        }\n\n        if (!matchDomain(meth.domain, origin)) {\n            throw new Error(`Method domain ${ meth.domain } does not match origin ${ origin }`);\n        }\n\n        return ZalgoPromise.try(() => {\n            return meth.val.apply({ source, origin, data }, data.args);\n        }).then(result => {\n            const { id, name } = data;\n            return { result, id, name };\n        });\n    });\n});\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType, domain : string | Array<string>, val : () => ZalgoPromise<T> | T, key : string) : SerializedFunction {\n    let id = uniqueID();\n\n    let methods = global.methods.get(destination);\n\n    if (!methods) {\n        methods = {};\n        global.methods.set(destination, methods);\n    }\n\n    methods[id] = { domain, val };\n\n    listenForFunctionCalls();\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name: val.name || key });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType, origin : string, { id, name } : { id : string, name : string }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n\n    function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n        let args = Array.prototype.slice.call(arguments);\n        return global.send(source, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin })\n            .then(({ data }) => data.result);\n    }\n\n    crossDomainFunctionWrapper.__name__ = name;\n    crossDomainFunctionWrapper.__xdomain__ = true;\n\n    crossDomainFunctionWrapper.source = source;\n    crossDomainFunctionWrapper.origin = origin;\n\n    return crossDomainFunctionWrapper;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serialize/function.js","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, getOrSet, noop, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { global } from '../global';\nimport { getWindowInstanceID, onKnownWindow } from '../lib';\n\ntype SerializedProxyWindow = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    setLocation : (string) => ZalgoPromise<void>,\n    setName : (string) => ZalgoPromise<void>,\n    serializedID : string,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nexport class ProxyWindow {\n\n    serializedWindow : SerializedProxyWindow\n    actualWindow : CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n\n    constructor(serializedWindow : SerializedProxyWindow) {\n        this.serializedWindow = serializedWindow;\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow.getInstanceID = memoizePromise(this.serializedWindow.getInstanceID);\n        this.waitForWindows();\n    }\n\n    waitForWindows() {\n        onKnownWindow(win => {\n            this.matchWindow(win).then(match => {\n                if (match) {\n                    this.setWindow(win);\n                }\n            }).catch(noop);\n        });\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.location = href;\n            } else {\n                return this.serializedWindow.setLocation(href);\n            }\n        }).then(() => this);\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                if (!isSameDomain(this.actualWindow)) {\n                    throw new Error(`Can not set name for window on different domain`);\n                }\n                // $FlowFixMe\n                this.actualWindow.name = name;\n                // $FlowFixMe\n                if (this.actualWindow.c) {\n                    // $FlowFixMe\n                    this.actualWindow.frameElement.setAttribute('name', name);\n                }\n            } else {\n                return this.serializedWindow.setName(name);\n            }\n        }).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.close();\n            } else {\n                return this.serializedWindow.close();\n            }\n        }).then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                this.actualWindow.focus();\n            } else {\n                return this.serializedWindow.focus();\n            }\n        }).then(() => this);\n    }\n\n    setWindow(win : CrossDomainWindowType) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(win);\n    }\n\n    matchWindow(win : CrossDomainWindowType) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n\n            return ZalgoPromise.all([\n                this.getInstanceID(),\n                getWindowInstanceID(win)\n            ]).then(([ proxyInstanceID, knownWindowInstanceID ]) => {\n                return proxyInstanceID === knownWindowInstanceID;\n            });\n        });\n    }\n\n    hasWindow() : boolean {\n        return Boolean(this.actualWindow);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    getSerializedID() : string {\n        return this.serializedWindow.serializedID;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        if (this.actualWindow) {\n            return getWindowInstanceID(this.actualWindow);\n        } else {\n            return this.serializedWindow.getInstanceID();\n        }\n    }\n\n    serialize() : SerializedProxyWindow {\n        return this.serializedWindow;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow) : SerializedProxyWindow {\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win.serialize();\n        }\n        \n        return {\n            serializedID:  uniqueID(),\n            getInstanceID: () => getWindowInstanceID(win),\n            close:         () => ZalgoPromise.try(() => {\n                win.close();\n            }),\n            focus:         () => ZalgoPromise.try(() => {\n                win.focus();\n            }),\n            setLocation:   (href) => ZalgoPromise.try(() => {\n                // $FlowFixMe\n                win.location = href;\n            }),\n            setName:       (name) => ZalgoPromise.try(() => {\n                // $FlowFixMe\n                win.name = name;\n            })\n        };\n    }\n\n    static deserialize(serializedWindow : SerializedProxyWindow) : ProxyWindow {\n        return new ProxyWindow(serializedWindow);\n    }\n\n    static isProxyWindow(obj : mixed) : boolean {\n        return obj instanceof ProxyWindow;\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        let proxyWin = ProxyWindow.deserialize(ProxyWindow.serialize(win));\n        // $FlowFixMe\n        proxyWin.setWindow(win);\n        return proxyWin;\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedProxyWindow>;\n\nglobal.serializedWindows = global.serializedWindows || new WeakMap();\n\nexport function serializeWindow(destination : CrossDomainWindowType, domain : string | Array<string>, win : CrossDomainWindowType) : SerializedWindow {\n    return global.serializedWindows.getOrSet(win, () =>\n        serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win))\n    );\n}\n\nglobal.deseserializedWindows = {};\n\nexport function deserializeWindow(source : CrossDomainWindowType, origin : string, win : SerializedProxyWindow) : ProxyWindow {\n    return getOrSet(global.deseserializedWindows, win.serializedID, () => ProxyWindow.deserialize(win));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serialize/window.js","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType, domain : string | Array<string>, obj : T) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val))\n                ? serializeWindow(destination, domain, val)\n                : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType, origin : string, message : string) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow)\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serialize/serialize.js","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\n\nimport { serializeFunction, type SerializedFunction } from './function';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType, domain : string | Array<string>, val : Thenable, key : string) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key)\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serialize/promise.js","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, PROTOCOL, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\n\nexport let SEND_MESSAGE_STRATEGIES = {};\n\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : (string | Array<string>)) => {\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(window, win);\n        } catch (err) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n\n            if (window.location.protocol === PROTOCOL.FILE) {\n                return WILDCARD;\n            }\n\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            return getActualDomain(win);\n        }\n\n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        return win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    let { sendBridgeMessage, needsBridgeForBrowser, isBridge } = require('../../bridge');\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        return sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            return;\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        let foreignGlobal = win[WINDOW_PROP.POSTROBOT];\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        return foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/strategies.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { MESSAGE_TYPE, CONFIG, MESSAGE_NAME, WILDCARD, WINDOW_PROP } from '../../conf';\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction logMessage(domain : string | Array<string>, message : Message) {\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_send', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', domain || WILDCARD, '\\n\\n', message);\n        }\n    }\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string | Array<string>, message : Message) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n\n        if (isWindowClosed(win)) {\n            throw new Error('Window is closed');\n        }\n\n        logMessage(domain, message);\n\n        const serializedMessage = serializeMessage(win, domain, {\n            [ WINDOW_PROP.POSTROBOT ]: {\n                id: uniqueID(),\n                ...message\n            }\n        });\n\n\n        let messages = [];\n\n        return ZalgoPromise.map(Object.keys(SEND_MESSAGE_STRATEGIES), strategyName => {\n\n            return ZalgoPromise.try(() => {\n\n                if (!CONFIG.ALLOWED_POST_MESSAGE_METHODS[strategyName]) {\n                    throw new Error(`Strategy disallowed: ${ strategyName }`);\n                }\n\n                return SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n\n            }).then(() => {\n                messages.push(`${ strategyName }: success`);\n                return true;\n            }, err => {\n                messages.push(`${ strategyName }: ${ stringifyError(err) }\\n`);\n                return false;\n            });\n\n        }).then(results => {\n\n            let success = results.some(Boolean);\n            let status = `${ message.type } ${ message.name } ${ success ? 'success' : 'error' }:\\n  - ${ messages.join('\\n  - ') }\\n`;\n\n            if (!success) {\n                throw new Error(status);\n            }\n        });\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/send/index.js","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { isRegex } from 'belter/src';\n\nimport { global } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    global.responseListeners = {};\n    global.requestListeners  = {};\n}\n\nglobal.responseListeners = global.responseListeners || {};\nglobal.requestListeners  = global.requestListeners  || {};\nglobal.WINDOW_WILDCARD   = global.WINDOW_WILDCARD   || new (function WindowWildcard() { /* pass */ })();\n\nglobal.erroredResponseListeners = global.erroredResponseListeners || {};\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : string | RegExp | Array<string>\n};\n\nexport type ResponseListenerType = {\n    name : string,\n    window : CrossDomainWindowType,\n    domain : (string | Array<string> | RegExp),\n    respond : (err : ?mixed, result : ?mixed) => void,\n    ack? : ?boolean\n};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    global.responseListeners[hash] = listener;\n}\n\nexport function getResponseListener(hash : string) : ResponseListenerType {\n    return global.responseListeners[hash];\n}\n\nexport function deleteResponseListener(hash : string) {\n    delete global.responseListeners[hash];\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    global.erroredResponseListeners[hash] = true;\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    return Boolean(global.erroredResponseListeners[hash]);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp) }) : ?RequestListenerType {\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    let nameListeners = global.requestListeners[name];\n\n    if (!nameListeners) {\n        return;\n    }\n\n    for (let winQualifier of [ win, global.WINDOW_WILDCARD ]) {\n\n        let winListeners = winQualifier && nameListeners.get(winQualifier);\n\n        if (!winListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (winListeners[domain]) {\n                return winListeners[domain];\n            }\n\n            if (winListeners[__DOMAIN_REGEX__]) {\n                for (let { regex, listener } of winListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (winListeners[WILDCARD]) {\n            return winListeners[WILDCARD];\n        }\n    }\n}\n\n// eslint-disable-next-line complexity\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?CrossDomainWindowType, domain : ?(string | RegExp | Array<string>) }, listener : RequestListenerType) : { cancel : () => void } {\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        let listenersCollection = [];\n\n        for (let item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        let listenersCollection = [];\n\n        for (let item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (let cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    let existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = global.WINDOW_WILDCARD;\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === global.WINDOW_WILDCARD ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    let requestListeners = global.requestListeners;\n\n    let nameListeners = requestListeners[name];\n\n    if (!nameListeners) {\n        nameListeners = new WeakMap();\n        requestListeners[name] = nameListeners;\n    }\n\n    let winListeners  = nameListeners.get(win);\n\n    if (!winListeners) {\n        winListeners = {};\n        nameListeners.set(win, winListeners);\n    }\n\n    let strDomain = domain.toString();\n\n    let regexListeners = winListeners[__DOMAIN_REGEX__];\n    let regexListener;\n\n    if (isRegex(domain)) {\n\n        if (!regexListeners) {\n            regexListeners = [];\n            winListeners[__DOMAIN_REGEX__] = regexListeners;\n        }\n\n        regexListener = { regex: domain, listener };\n\n        regexListeners.push(regexListener);\n\n    } else {\n        winListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            if (!winListeners) {\n                return;\n            }\n\n            delete winListeners[strDomain];\n\n            if (win && Object.keys(winListeners).length === 0) {\n                nameListeners.delete(win);\n            }\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n            }\n        }\n\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/listeners.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\n\nexport let RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage) : ZalgoPromise<void> {\n\n        let options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, data = {}) : ZalgoPromise<void> {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return ZalgoPromise.resolve();\n            }\n\n            // $FlowFixMe\n            return sendMessage(source, origin, {\n                type,\n                hash:   message.hash,\n                name:   message.name,\n                ...data\n            });\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                let data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.SUCCESS,\n                    data\n                });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, {\n                    ack:  MESSAGE_ACK.ERROR,\n                    error\n                });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        let options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            return options.respond(message.error, null);\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            let data = message.data;\n            return options.respond(null, { source, origin, data });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/types.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { MESSAGE_NAME, WINDOW_PROP, MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { global } from '../../global';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nglobal.receivedMessages = global.receivedMessages || [];\n\ntype MessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string\n};\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string) : ?Object {\n\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message);\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[WINDOW_PROP.POSTROBOT];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\n\nexport function receiveMessage(event : MessageEvent) {\n\n    if (!window || window.closed) {\n        throw new Error(`Message recieved in closed window`);\n    }\n\n    try {\n        if (!event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    let message = parseMessage(data, source, origin);\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n    \n    if (global.receivedMessages.indexOf(message.id) === -1) {\n        global.receivedMessages.push(message.id);\n    } else {\n        return;\n    }\n\n    if (__DEBUG__) {\n        let level;\n\n        if (Object.keys(MESSAGE_NAME).map(key => MESSAGE_NAME[key]).indexOf(message.name) !== -1 || message.type === MESSAGE_TYPE.ACK) {\n            level = 'debug';\n        } else if (message.ack === 'error') {\n            level = 'error';\n        } else {\n            level = 'info';\n        }\n\n        // eslint-disable-next-line no-console\n        if (typeof console !== 'undefined' && typeof console[level] === 'function') {\n            // eslint-disable-next-line no-console\n            console[level]('postrobot_receive', message.type.replace(/^postrobot_message_/, ''), '::', message.name, '::', origin, '\\n\\n', message);\n        }\n    }\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message);\n}\n\nexport function messageListener(event : { source : CrossDomainWindowType, origin : string, data : string, sourceElement : CrossDomainWindowType, originalEvent? : { origin : string } }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    // $FlowFixMe\n    let messageEvent : MessageEvent = {\n        source: event.source || event.sourceElement,\n        origin: event.origin || (event.originalEvent && event.originalEvent.origin),\n        data:   event.data\n    };\n\n    if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n        try {\n            require('../../compat').emulateIERestrictions(messageEvent.source, window);\n        } catch (err) {\n            return;\n        }\n    }\n\n    receiveMessage(messageEvent);\n}\n\nexport function listenForMessages() {\n    // $FlowFixMe\n    addEventListener(window, 'message', messageListener);\n}\n\nglobal.receiveMessage = receiveMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/drivers/receive/index.js","/* @flow */\n\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getAncestor, isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex } from 'belter/src';\n\n\nimport { CONFIG, MESSAGE_TYPE, WILDCARD } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { global } from '../global';\n\nglobal.requestPromises = global.requestPromises || new WeakMap();\n\ntype WindowResolverType = CrossDomainWindowType | string | HTMLIFrameElement;\n\ntype RequestOptionsType = {\n    window? : ?WindowResolverType,\n    domain? : ?(string | Array<string> | RegExp),\n    name? : ?string,\n    data? : ?Object,\n    fireAndForget? : ?boolean,\n    timeout? : ?number\n};\n\ntype ResponseMessageEvent = {\n    source : CrossDomainWindowType,\n    origin : string,\n    data : Object\n};\n\nexport function request(options : RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let prom = ZalgoPromise.try(() => {\n\n        if (!options.name) {\n            throw new Error('Expected options.name');\n        }\n\n        let name = options.name;\n        let targetWindow : ?CrossDomainWindowType;\n        let domain : string | Array<string> | RegExp;\n\n        if (typeof options.window === 'string') {\n            let el = document.getElementById(options.window);\n\n            if (!el) {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be a valid element id`);\n            }\n\n            if (el.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            // $FlowFixMe\n            if (!el.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            // $FlowFixMe\n            targetWindow = el.contentWindow;\n\n        } else if (options.window instanceof HTMLIFrameElement) {\n\n            if (options.window.tagName.toLowerCase() !== 'iframe') {\n                throw new Error(`Expected options.window ${ Object.prototype.toString.call(options.window) } to be an iframe`);\n            }\n\n            if (options.window && !options.window.contentWindow) {\n                throw new Error('Iframe must have contentWindow.  Make sure it has a src attribute and is in the DOM.');\n            }\n\n            if (options.window && options.window.contentWindow) {\n                // $FlowFixMe\n                targetWindow = options.window.contentWindow;\n            }\n        } else {\n            targetWindow = options.window;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Expected options.window to be a window object, iframe, or iframe element id.');\n        }\n\n        const win = targetWindow;\n\n        domain = options.domain || WILDCARD;\n\n        let hash = `${ options.name }_${ uniqueID() }`;\n\n        if (isWindowClosed(win)) {\n            throw new Error('Target window is closed');\n        }\n\n        let hasResult = false;\n\n        let requestPromises = global.requestPromises.get(win);\n\n        if (!requestPromises) {\n            requestPromises = [];\n            global.requestPromises.set(win, requestPromises);\n        }\n\n        let requestPromise = ZalgoPromise.try(() => {\n\n            if (isAncestor(window, win)) {\n                return awaitWindowHello(win, options.timeout || CONFIG.CHILD_WINDOW_TIMEOUT);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain) && !origin) {\n                return sayHello(win);\n            }\n\n        }).then(({ domain: origin } = {}) => {\n\n            if (isRegex(domain)) {\n                if (!matchDomain(domain, origin)) {\n                    throw new Error(`Remote window domain ${ origin } does not match regex: ${ domain.toString() }`);\n                }\n\n                domain = origin;\n            }\n\n            if (typeof domain !== 'string' && !Array.isArray(domain)) {\n                throw new TypeError(`Expected domain to be a string or array`);\n            }\n\n            const actualDomain = domain;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                let responseListener : ResponseListenerType;\n\n                if (!options.fireAndForget) {\n                    responseListener = {\n                        name,\n                        window: win,\n                        domain: actualDomain,\n                        respond(err, result) {\n                            if (!err) {\n                                hasResult = true;\n                                requestPromises.splice(requestPromises.indexOf(requestPromise, 1));\n                            }\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve(result);\n                            }\n                        }\n                    };\n\n                    addResponseListener(hash, responseListener);\n                }\n\n                sendMessage(win, actualDomain, {\n                    type:          MESSAGE_TYPE.REQUEST,\n                    hash,\n                    name,\n                    data:          options.data,\n                    fireAndForget: Boolean(options.fireAndForget)\n                }).catch(reject);\n\n                if (options.fireAndForget) {\n                    return resolve();\n                }\n\n                let totalAckTimeout = isWindowKnown(win) ? CONFIG.ACK_TIMEOUT_KNOWN : CONFIG.ACK_TIMEOUT;\n                let totalResTimeout = options.timeout || CONFIG.RES_TIMEOUT;\n\n                let ackTimeout = totalAckTimeout;\n                let resTimeout = totalResTimeout;\n\n                let cycleTime = 100;\n\n                let cycle = () => {\n\n                    if (hasResult) {\n                        return;\n                    }\n\n                    if (isWindowClosed(win)) {\n\n                        if (!responseListener.ack) {\n                            return reject(new Error(`Window closed for ${ name } before ack`));\n                        }\n\n                        return reject(new Error(`Window closed for ${ name } before response`));\n                    }\n\n                    ackTimeout = Math.max(ackTimeout - cycleTime, 0);\n                    if (resTimeout !== -1) {\n                        resTimeout = Math.max(resTimeout - cycleTime, 0);\n                    }\n\n                    let hasAck = responseListener.ack;\n\n                    if (hasAck) {\n\n                        if (resTimeout === -1) {\n                            return;\n                        }\n\n                        cycleTime = Math.min(resTimeout, 2000);\n\n                    } else if (ackTimeout === 0) {\n                        return reject(new Error(`No ack for postMessage ${ name } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                    } else if (resTimeout === 0) {\n                        return reject(new Error(`No response for postMessage ${ name } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                    }\n\n                    setTimeout(cycle, cycleTime);\n                };\n\n                setTimeout(cycle, cycleTime);\n            });\n        });\n\n        requestPromise.catch(() => {\n            markResponseListenerErrored(hash);\n            deleteResponseListener(hash);\n        });\n\n        requestPromises.push(requestPromise);\n\n        return requestPromise;\n    });\n\n    return prom;\n}\n\nexport function send(window : WindowResolverType, name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    options = options || {};\n    options.window = window;\n    options.name = name;\n    options.data = data;\n\n    return request(options);\n}\n\nexport function sendToParent(name : string, data : ?Object, options : ?RequestOptionsType) : ZalgoPromise<ResponseMessageEvent> {\n\n    let win = getAncestor();\n\n    if (!win) {\n        return new ZalgoPromise((resolve, reject) => reject(new Error('Window does not have a parent')));\n    }\n\n    return send(win, name, data, options);\n}\n\nexport function client(options : RequestOptionsType = {}) : { send : (string, ?Object) => ZalgoPromise<ResponseMessageEvent> } {\n\n    if (!options.window) {\n        throw new Error(`Expected options.window`);\n    }\n\n    const win = options.window;\n\n    return {\n        send(name : string, data : ?Object) : ZalgoPromise<ResponseMessageEvent> {\n            return send(win, name, data, options);\n        }\n    };\n}\n\nglobal.send = send;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/client.js","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once as onceFunction, safeInterval } from 'belter/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport { global } from '../global';\n\ntype ErrorHandlerType = (err : mixed) => void;\ntype HandlerType = ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (void | mixed | ZalgoPromise<mixed>);\n\ntype ServerOptionsType = {\n    handler? : ?HandlerType,\n    errorHandler? : ?ErrorHandlerType,\n    window? : CrossDomainWindowType,\n    name? : ?string,\n    domain? : ?(string | RegExp | Array<string>),\n    once? : ?boolean,\n    errorOnClose? : ?boolean\n};\n\nexport function listen(options : ServerOptionsType) : { cancel : () => void } {\n\n    if (!options.name) {\n        throw new Error('Expected options.name');\n    }\n\n    if (!options.handler) {\n        throw new Error('Expected options.handler');\n    }\n\n    const name = options.name;\n    const win = options.window;\n    const domain = options.domain;\n\n    let listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    let requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    if (options.once) {\n        let handler = listenerOptions.handler;\n        listenerOptions.handler = onceFunction(function listenOnce() : mixed | ZalgoPromise<mixed> {\n            requestListener.cancel();\n            return handler.apply(this, arguments);\n        });\n    }\n\n    if (listenerOptions.window && options.errorOnClose) {\n        let interval = safeInterval(() => {\n            if (win && typeof win === 'object' && isWindowClosed(win)) {\n                interval.cancel();\n                listenerOptions.handleError(new Error('Post message target window is closed'));\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : { cancel : () => void } {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    return listen(options);\n}\n\nexport function once(name : string, options : ?(ServerOptionsType | HandlerType) = {}, handler : ?HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n\n    if (typeof options === 'function') {\n        handler = options;\n        options = {};\n    }\n\n    options = options || {};\n    handler = handler || options.handler;\n    let errorHandler = options.errorHandler;\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n\n        options = options || {};\n\n        options.name = name;\n        options.once = true;\n\n        options.handler = (event) => {\n            resolve(event);\n            if (handler) {\n                return handler(event);\n            }\n        };\n\n        options.errorHandler = (err) => {\n            reject(err);\n            if (errorHandler) {\n                return errorHandler(err);\n            }\n        };\n    });\n\n    let onceListener = listen(options);\n    promise.cancel = onceListener.cancel;\n\n    return promise;\n}\n\nexport function listener(options : ServerOptionsType = {}) : { on : (name : string, handler : HandlerType) => { cancel : () => void } } {\n\n    return {\n        on(name : string, handler : HandlerType) : { cancel : () => void } {\n            return on(name, options, handler);\n        }\n    };\n}\n\nglobal.on = on;\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/server.js","/* @flow */\n\nimport { WINDOW_PROP } from '../conf';\nimport { messageListener } from '../drivers';\n\nexport { CONFIG } from '../conf';\n\nexport function disable() {\n    delete window[WINDOW_PROP.POSTROBOT];\n    window.removeEventListener('message', messageListener);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/config.js","/* @flow */\n\nimport { getAncestor } from 'cross-domain-utils/src';\n\nexport * from './client';\nexport * from './server';\nexport * from './config';\n\nexport let parent = getAncestor();\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/index.js","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { global } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n\n    // global.tunnelWindows\n    // global.bridges\n    // global.popupWindowsByName\n    // global.responseListeners\n    // global.requestListeners\n\n    let requestPromises = global.requestPromises.get(win);\n\n    if (requestPromises) {\n        for (let promise of requestPromises) {\n            promise.reject(new Error(`No response from window - cleaned up`));\n        }\n    }\n\n    if (global.popupWindowsByWin) {\n        global.popupWindowsByWin.delete(win);\n    }\n\n    if (global.remoteWindows) {\n        global.remoteWindows.delete(win);\n    }\n\n    global.requestPromises.delete(win);\n    global.methods.delete(win);\n    global.helloPromises.delete(win);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clean.js","/* @flow */\n\nimport { initHello } from './lib';\nimport { listenForMessages } from './drivers';\nimport { global } from './global';\n\nexport * from './public';\nexport { markWindowKnown } from './lib';\nexport { serializeMessage, deserializeMessage, ProxyWindow } from './serialize';\nexport { cleanUpWindow } from './clean';\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\nexport let bridge = __POST_ROBOT__.__IE_POPUP_SUPPORT__ ? require('./bridge/interface') : null;\n\nif (!global.initialized) {\n    global.initialized = true;\n\n    listenForMessages();\n\n    if (bridge) {\n        bridge.openTunnelToOpener();\n    }\n\n    initHello();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interface.js","/* @flow */\n\n// eslint-disable-next-line import/no-namespace\nimport * as INTERFACE from './interface';\n\nexport * from './interface';\nexport default INTERFACE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/util.js","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win : ?SameDomainWindowType) : string {\n\n    win = win || window;\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win : CrossDomainWindowType) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    return [ ...getAllChildFrames(top), top ];\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n\n    for (let i = 0; i < iframeFrames.length; i++) {\n        if (isFrameWindowClosed(iframeFrames[i])) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n\n    for (let i = 0; i < iframeWindows.length; i++) {\n        if (isWindowClosed(iframeWindows[i])) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win : ?CrossDomainWindowType) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup() : boolean {\n    return Boolean(getOpener(window));\n}\n\nexport function isIframe() : boolean {\n    return Boolean(getParent(window));\n}\n\nexport function isFullpage() : boolean {\n    return Boolean(!isIframe() && !isPopup());\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : (string | Array<string> | RegExp), origin : (string | Array<string> | RegExp)) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : (string | Array<string> | RegExp)) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        noop(obj === obj);  // eslint-disable-line no-self-compare\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        noop(obj && obj.__cross_domain_utils_window_check__);\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/cross-domain-utils/src/utils.js","/* @flow */\n\nimport { noop } from './util';\nimport { getStorage } from './storage';\n\nfunction getBelterExperimentStorage() : Object {\n    return getStorage({ name: 'belter_experiment' });\n}\n\nfunction isEventUnique(name : string) : boolean {\n    return getBelterExperimentStorage().getSessionState(state => {\n        state.loggedBeacons = state.loggedBeacons || [];\n\n        if (state.loggedBeacons.indexOf(name) === -1) {\n            state.loggedBeacons.push(name);\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport type Experiment = {\n    isEnabled : () => boolean,\n    isDisabled : () => boolean,\n    getTreatment : () => string,\n    log : (string, payload? : { [string] : ?string }) => Experiment,\n    logStart : (payload? : { [string] : ?string }) => Experiment,\n    logComplete : (payload? : { [string] : ?string }) => Experiment\n};\n\nfunction getThrottlePercentile(name : string) : number {\n    return getBelterExperimentStorage().getState(state => {\n        state.throttlePercentiles = state.throttlePercentiles || {};\n        state.throttlePercentiles[name] = state.throttlePercentiles[name] || Math.floor(Math.random() * 100);\n        return state.throttlePercentiles[name];\n    });\n}\n\nconst THROTTLE_GROUP = {\n    TEST:     'test',\n    CONTROL:  'control',\n    THROTTLE: 'throttle'\n};\n\ntype ExperimentOptions = {\n    name : string,\n    sample? : number,\n    logTreatment? : ({ name : string, treatment : string }) => void,\n    logCheckpoint? : ({ name : string, treatment : string, checkpoint : string, payload? : { [string] : ?string } }) => void\n};\n\nexport function experiment({ name, sample = 50, logTreatment = noop, logCheckpoint = noop } : ExperimentOptions) : Experiment {\n\n    let throttle = getThrottlePercentile(name);\n\n    let group;\n\n    if (throttle < sample) {\n        group = THROTTLE_GROUP.TEST;\n    } else if ((sample >= 50) || ((sample <= throttle) && (throttle < (sample * 2)))) {\n        group = THROTTLE_GROUP.CONTROL;\n    } else {\n        group = THROTTLE_GROUP.THROTTLE;\n    }\n\n    let treatment = `${ name }_${ group }`;\n\n    let started = false;\n    let forced = false;\n\n    try {\n        if (window.localStorage && window.localStorage.getItem(name)) {\n            forced = true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return {\n\n        isEnabled() : boolean {\n            return (group === THROTTLE_GROUP.TEST) || forced;\n        },\n\n        isDisabled() : boolean {\n            return (group !== THROTTLE_GROUP.TEST) && !forced;\n        },\n\n        getTreatment() : string {\n            return treatment;\n        },\n\n        log(checkpoint : string, payload? : { [string] : ?string } = {}) : Experiment {\n            if (!started) {\n                return this;\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }`)) {\n                logTreatment({ name, treatment });\n            }\n\n            if (isEventUnique(`${ name }_${ treatment }_${ checkpoint }`)) {\n                logCheckpoint({ name, treatment, checkpoint, payload });\n            }\n\n            return this;\n        },\n\n        logStart(payload? : { [string] : ?string } = {}) : Experiment {\n            started = true;\n            return this.log(`start`, payload);\n        },\n\n        logComplete(payload? : { [string] : ?string } = {}) : Experiment {\n            return this.log(`complete`, payload);\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/experiment.js","/* @flow */\n\nimport { getGlobal } from './util';\n\nexport function getGlobalNameSpace<T : Object>({ name, version = 'latest' } : { name : string, version? : string }) : { get : (string, defValue? : T) => T } {\n\n    let global = getGlobal();\n    let globalKey = `__${ name }__${ version }_global__`;\n\n    let namespace = global[globalKey] = global[globalKey] || {};\n\n    return {\n        get: (key : string, defValue? : T) : T => {\n            // $FlowFixMe\n            defValue = defValue || {};\n            let item = namespace[key] = namespace[key] || defValue;\n            return item;\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/global.js","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { type SameDomainWindowType } from 'cross-domain-utils/src';\n\ntype RequestOptionsType = {\n    url : string,\n    method? : string,\n    headers? : { [key : string] : string },\n    json? : Object,\n    data? : { [key : string] : string },\n    body? : string,\n    win? : SameDomainWindowType,\n    timeout? : number\n};\n\ntype ResponseType = {\n    status : number,\n    headers : { [string] : string },\n    body : Object\n};\n\nconst HEADERS = {\n    CONTENT_TYPE: 'content-type',\n    ACCEPT:       'accept'\n};\n\nlet headerBuilders = [];\n\nfunction parseHeaders(rawHeaders : string = '') : { [string] : string } {\n    let result = {};\n    for (let line of rawHeaders.trim().split('\\n')) {\n        let [ key, ...values ] = line.split(':');\n        result[key.toLowerCase()] = values.join(':').trim();\n    }\n    return result;\n}\n\nexport function request({ url, method = 'get', headers = {}, json, data, body, win = window, timeout = 0 } : RequestOptionsType) : ZalgoPromise<ResponseType> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        if ((json && data) || (json && body) || (data && json)) {\n            throw new Error(`Only options.json or options.data or options.body should be passed`);\n        }\n\n        let normalizedHeaders = {};\n\n        for (let key of Object.keys(headers)) {\n            normalizedHeaders[key.toLowerCase()] = headers[key];\n        }\n\n        if (json) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/json';\n        } else if (data || body) {\n            normalizedHeaders[HEADERS.CONTENT_TYPE] = normalizedHeaders[HEADERS.CONTENT_TYPE] || 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        normalizedHeaders[HEADERS.ACCEPT] = normalizedHeaders[HEADERS.ACCEPT] || 'application/json';\n\n        for (let headerBuilder of headerBuilders) {\n            let builtHeaders = headerBuilder();\n\n            for (let key of Object.keys(builtHeaders)) {\n                normalizedHeaders[key.toLowerCase()] = builtHeaders[key];\n            }\n        }\n\n        let xhr = new win.XMLHttpRequest();\n\n        xhr.addEventListener('load', function xhrLoad() : void {\n\n            let responseHeaders = parseHeaders(this.getAllResponseHeaders());\n\n            if (!this.status) {\n                return reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: no response status code.`));\n            }\n            \n            let contentType = responseHeaders['content-type'];\n            let isJSON = contentType && (contentType.indexOf('application/json') === 0 || contentType.indexOf('text/json') === 0);\n            let responseBody = this.responseText;\n\n            try {\n                responseBody = JSON.parse(responseBody);\n            } catch (err) {\n                if (isJSON) {\n                    return reject(new Error(`Invalid json: ${ this.responseText }.`));\n                }\n            }\n\n            let res = {\n                status:  this.status,\n                headers: responseHeaders,\n                body:    responseBody\n            };\n\n            return resolve(res);\n\n        }, false);\n\n        xhr.addEventListener('error', (evt) => {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } failed: ${ evt.toString() }.`));\n        }, false);\n\n        xhr.open(method, url, true);\n\n        for (let key in normalizedHeaders) {\n            if (normalizedHeaders.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, normalizedHeaders[key]);\n            }\n        }\n\n        if (json) {\n            body = JSON.stringify(json);\n        } else if (data) {\n            body = Object.keys(data).map(key => {\n                return `${ encodeURIComponent(key) }=${ data ? encodeURIComponent(data[key]) : '' }`;\n            }).join('&');\n        }\n\n        xhr.timeout = timeout;\n        xhr.ontimeout = function xhrTimeout() {\n            reject(new Error(`Request to ${ method.toLowerCase() } ${ url } has timed out`));\n        };\n\n        xhr.send(body);\n    });\n}\n\nexport function addHeaderBuilder(method : () => { [string] : string }) {\n    headerBuilders.push(method);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/http.js","/* @flow */\n\nimport { memoize, promisify } from './util';\n\nexport function memoized(target : Object, name : string, descriptor : Object) {\n    descriptor.value = memoize(descriptor.value, { name, thisNamespace: true });\n}\n\nexport function promise(target : Object, name : string, descriptor : Object) {\n    descriptor.value = promisify(descriptor.value, { name });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/belter/src/decorators.js"],"sourceRoot":""}